{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/compiler/shims/react.ts", "empty-module:~/utils/client/icons.client", "<stdin>", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "/Users/gabi/code/blossom/rosette-app/app/root.tsx", "../app/App.tsx", "../app/providers/AppReady.tsx", "../app/components/BlossomLabsLogo.tsx", "../app/providers/Wagmi.tsx", "../app/components/AppLayout/index.tsx", "../app/components/AppLayout/BottomBar/index.tsx", "../app/components/AppLayout/TopBar/index.tsx", "../app/components/AccountModule/index.tsx", "../app/components/AccountModule/helpers.ts", "../app/components/AccountModule/use-account-module-store.ts", "../app/components/AccountModule/AccountButton.tsx", "../app/components/AccountModule/HeaderPopover.tsx", "../app/components/AccountModule/screens/index.ts", "../app/components/AccountModule/screens/ScreenPromptedAction.tsx", "../app/components/AccountModule/LoadingRing.tsx", "../app/components/AccountModule/screens/ScreenConnected.tsx", "../app/hooks/useCopyToClipboard.ts", "../app/components/AccountModule/screens/ScreenConnecting.tsx", "../app/components/AccountModule/screens/ScreenError.tsx", "../app/components/AccountModule/screens/ScreenWallets.tsx", "../app/components/AppLayout/TopBar/NavSection/index.tsx", "../app/components/AppLayout/TopBar/NavSection/CompactMenu/index.tsx", "../app/components/AppLayout/TopBar/NavSection/CompactMenu/MenuItem.tsx", "../app/components/AppLayout/TopBar/NavSection/CompactMenu/Sidebar.tsx", "/Users/gabi/code/blossom/rosette-app/app/routes/contract-descriptions-search.ts", "../app/utils/server/subgraph.server.ts", "/Users/gabi/code/blossom/rosette-app/app/routes/fn-descriptions-upload.ts", "../app/utils/server/ipfs.server.ts", "/Users/gabi/code/blossom/rosette-app/app/routes/describe.tsx", "../app/components/AppLayout/AppScreen.tsx", "../app/components/ContractDescriptorScreen/index.tsx", "../app/hooks/useDebounce.ts", "../app/components/ContractDescriptorScreen/Carousel/index.tsx", "../app/components/ContractDescriptorScreen/Carousel/PrevNext.tsx", "../app/components/ContractDescriptorScreen/FunctionDescriptor/index.tsx", "../app/components/ContractDescriptorScreen/FunctionDescriptor/DescriptionField.tsx", "../app/components/ContractDescriptorScreen/Pagination/index.tsx", "../app/components/ContractDescriptorScreen/Pagination/PaginationItem.tsx", "../app/components/ContractDescriptorScreen/Pagination/PaginationSeparator.tsx", "../app/components/ContractDescriptorScreen/use-contract-descriptor-store.ts", "../app/utils/web3.ts", "../app/components/ContractSelectorScreen/index.tsx", "../app/components/ContractSelectorScreen/ContractItem.tsx", "../app/components/SmoothDisplayContainer.tsx", "../app/utils/server/contract-data.server.ts", "../app/utils/server/web3.server.ts", "../app/utils/server/blockchain-explorers.server.ts", "../app/utils/server/proxy-patterns.server.ts", "/Users/gabi/code/blossom/rosette-app/app/routes/entries.tsx", "/Users/gabi/code/blossom/rosette-app/app/routes/entries/$entryId.tsx", "../app/components/ContractForm/index.tsx", "/Users/gabi/code/blossom/rosette-app/app/routes/entries/index.tsx", "/Users/gabi/code/blossom/rosette-app/app/routes/index.tsx", "/Users/gabi/code/blossom/rosette-app/app/routes/home.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "module.exports = {};", "export * from \"@remix-run/dev/server-build\";", "\nimport * as entryServer from \"/Users/gabi/code/blossom/rosette-app/app/entry.server.tsx\";\nimport * as route0 from \"/Users/gabi/code/blossom/rosette-app/app/root.tsx\";\nimport * as route1 from \"/Users/gabi/code/blossom/rosette-app/app/routes/contract-descriptions-search.ts\";\nimport * as route2 from \"/Users/gabi/code/blossom/rosette-app/app/routes/fn-descriptions-upload.ts\";\nimport * as route3 from \"/Users/gabi/code/blossom/rosette-app/app/routes/describe.tsx\";\nimport * as route4 from \"/Users/gabi/code/blossom/rosette-app/app/routes/entries.tsx\";\nimport * as route5 from \"/Users/gabi/code/blossom/rosette-app/app/routes/entries/$entryId.tsx\";\nimport * as route6 from \"/Users/gabi/code/blossom/rosette-app/app/routes/entries/index.tsx\";\nimport * as route7 from \"/Users/gabi/code/blossom/rosette-app/app/routes/index.tsx\";\nimport * as route8 from \"/Users/gabi/code/blossom/rosette-app/app/routes/home.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/contract-descriptions-search\": {\n      id: \"routes/contract-descriptions-search\",\n      parentId: \"root\",\n      path: \"contract-descriptions-search\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/fn-descriptions-upload\": {\n      id: \"routes/fn-descriptions-upload\",\n      parentId: \"root\",\n      path: \"fn-descriptions-upload\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/describe\": {\n      id: \"routes/describe\",\n      parentId: \"root\",\n      path: \"describe\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/entries\": {\n      id: \"routes/entries\",\n      parentId: \"root\",\n      path: \"entries\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/entries/$entryId\": {\n      id: \"routes/entries/$entryId\",\n      parentId: \"routes/entries\",\n      path: \":entryId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/entries/index\": {\n      id: \"routes/entries/index\",\n      parentId: \"routes/entries\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/home\": {\n      id: \"routes/home\",\n      parentId: \"root\",\n      path: \"home\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    }\n  };", "import ReactDOMServer from \"react-dom/server\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { ServerStyleSheet } from \"styled-components\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const sheet = new ServerStyleSheet();\n\n  let markup = ReactDOMServer.renderToString(\n    sheet.collectStyles(\n      <RemixServer context={remixContext} url={request.url} />\n    )\n  );\n  const styles = sheet.getStyleTags();\n\n  markup = markup.replace(\"__STYLES__\", styles);\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import { Main } from \"@1hive/1hive-ui\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useLoaderData,\n} from \"@remix-run/react\";\nimport type { MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { App } from \"~/App\";\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Rosette\",\n    charset: \"utf-8\",\n    viewport: \"width=device-width,initial-scale=1\",\n  };\n};\n\nexport async function loader() {\n  return json({\n    ENV: {\n      CHAIN_ID: process.env.CHAIN_ID,\n      RPC_URL: process.env.RPC_URL,\n      INFURA_ID: process.env.INFURA_ID,\n    },\n  });\n}\n\ninterface DocumentProps {\n  children: React.ReactNode;\n}\n\nconst Document = ({ children }: DocumentProps) => {\n  const data = useLoaderData();\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n        {typeof document === \"undefined\" ? \"__STYLES__\" : null}\n      </head>\n      <body>\n        {children}\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `window.ENV = ${JSON.stringify(data.ENV)}`,\n          }}\n        />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n};\n\nexport default function WrapperApp() {\n  return (\n    <Document>\n      <Main\n        assetsUrl=\"/aragon-ui/\"\n        layout={false}\n        scrollView={true}\n        theme=\"dark\"\n      >\n        <App />\n      </Main>\n    </Document>\n  );\n}\n\n// https://remix.run/docs/en/v1/api/conventions#catchboundary\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  let message;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </p>\n      );\n      break;\n    case 404:\n      message = (\n        <p>Oops! Looks like you tried to visit a page that does not exist.</p>\n      );\n      break;\n\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <div>\n      <h1>\n        {caught.status}: {caught.statusText}\n      </h1>\n      {message}\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  return (\n    <div>\n      <p>[ErrorBoundary]: There was an error: {error.message}</p>\n    </div>\n  );\n}\n", "import { useTheme } from \"@1hive/1hive-ui\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useState } from \"react\";\n\nimport { AppReady } from \"~/providers/AppReady\";\nimport Wagmi from \"~/providers/Wagmi\";\nimport { AppLayout } from \"~/components/AppLayout\";\nimport { Outlet } from \"@remix-run/react\";\n\nexport type AppContext = {\n  displayTopBar(display: boolean): void;\n  displayBottomBar(display: boolean): void;\n};\n\nexport const App = () => {\n  const theme = useTheme();\n\n  const [displayTopBar, setDisplayTopBar] = useState(true);\n  const [displayBottomBar, setDisplayBottomBar] = useState(true);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Wagmi>\n        <AppReady>\n          <AppLayout\n            displayTopBar={displayTopBar}\n            displayBottomBar={displayBottomBar}\n          >\n            <Outlet\n              context={{\n                displayTopBar: setDisplayTopBar,\n                displayBottomBar: setDisplayBottomBar,\n              }}\n            />\n          </AppLayout>\n        </AppReady>\n      </Wagmi>\n    </ThemeProvider>\n  );\n};\n", "import { springs } from \"@1hive/1hive-ui\";\nimport styled from \"styled-components\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport type { ReactNode } from \"react\";\nimport type { TransitionFn } from \"react-spring\";\nimport { a, useTransition } from \"react-spring\";\n\nimport { BlossomLabsLogo } from \"~/components/BlossomLabsLogo\";\n\nexport type AppReadyTransition = TransitionFn<\n  boolean,\n  {\n    progress: number;\n    topBarTransform: string;\n    bottomBarTransform: string;\n    screenTransform: string;\n  }\n>;\n\ntype AppReadyContextProps = {\n  appReady: boolean;\n  appReadyTransition: AppReadyTransition;\n};\n\nconst AppReadyContext = createContext<AppReadyContextProps>(\n  {} as AppReadyContextProps\n);\n\ntype AppReadyProps = { children: ReactNode };\n\nexport function AppReady({ children }: AppReadyProps) {\n  const [ready, setReady] = useState(false);\n\n  const appReadyTransition = useTransition(ready, {\n    config: springs.lazy,\n    from: {\n      progress: 0,\n      topBarTransform: \"translate3d(0, -100%, 0)\",\n      bottomBarTransform: \"translate3d(0, 100%, 0)\",\n      screenTransform: \"scale3d(0.9, 0.9, 1)\",\n    },\n    enter: {\n      progress: 1,\n      topBarTransform: \"translate3d(0, 0, 0)\",\n      bottomBarTransform: \"translate3d(0, 0, 0)\",\n      screenTransform: \"scale3d(1, 1, 1)\",\n    },\n    leave: {\n      progress: 0,\n      topBarTransform: \"translate3d(0, -100%, 0)\",\n      bottomBarTransform: \"translate3d(0, 100%, 0)\",\n      screenTransform: \"scale3d(0.9, 0.9, 1)\",\n    },\n  });\n\n  const splashTransition = useTransition(!ready, {\n    config: springs.swift,\n    from: {\n      opacity: 1,\n      logoTransform: \" rotate3d(0, 0, 1, 0deg)\",\n    },\n    enter: {\n      opacity: 1,\n      logoTransform: \"rotate3d(0, 0, 1, 360deg)\",\n    },\n    leave: {\n      opacity: 0,\n      // logoTransform: \"rotate3d(0, 0, 1, 360deg)\",\n    },\n  });\n\n  useEffect(() => {\n    const id = setTimeout(() => setReady(true), 400);\n    return () => clearTimeout(id);\n  }, []);\n\n  return (\n    <AppReadyContext.Provider value={{ appReady: ready, appReadyTransition }}>\n      {splashTransition(\n        ({ opacity, logoTransform }, loading) =>\n          loading && (\n            <AnimatedSplashContainer\n              style={{ opacity, transform: logoTransform }}\n            >\n              <a.div\n                style={{\n                  height: \"48px\",\n                }}\n              >\n                <BlossomLabsLogo iconSize=\"40px\" showIconOnly />\n              </a.div>\n            </AnimatedSplashContainer>\n          )\n      )}\n      {children}\n    </AppReadyContext.Provider>\n  );\n}\n\nexport function useAppReady() {\n  return useContext(AppReadyContext);\n}\n\nconst AnimatedSplashContainer = styled(a.div)`\n  position: fixed;\n  transition-duration: 500ms;\n  z-index: 9;\n  inset: 0;\n  display: grid;\n  place-items: center;\n`;\n", "import { GU } from \"@1hive/1hive-ui/\";\nimport styled from \"styled-components\";\n\nimport blossomLabsIcon from \"~/assets/blossom-labs.svg\";\n\ntype BlossomLabsLogoProps = {\n  iconSize?: string;\n  opacity?: number | string;\n  showIconOnly?: boolean;\n};\n\nexport const BlossomLabsLogo = ({\n  iconSize = \"20px\",\n  opacity,\n  showIconOnly = false,\n}: BlossomLabsLogoProps) => (\n  <OutterWrapper opacity={opacity}>\n    <a\n      style={{\n        textDecoration: \"none\",\n      }}\n      target=\"_blank\"\n      href=\"https://github.com/BlossomLabs\"\n      rel=\"noreferrer\"\n    >\n      <div\n        style={{\n          display: \"flex\",\n          gap: 1 * GU,\n        }}\n      >\n        <img\n          style={{\n            width: iconSize,\n            height: iconSize,\n          }}\n          src={blossomLabsIcon}\n          alt=\"\"\n        />{\" \"}\n        {!showIconOnly && \"Blossom\"}\n      </div>\n    </a>\n  </OutterWrapper>\n);\n\nconst OutterWrapper = styled.span<{ opacity?: number | string }>`\n  display: inline-block;\n  color: #f8b9b6;\n  opacity: ${(p) => p.opacity};\n  font-weight: bold;\n  vertical-align: middle;\n`;\n", "import { providers } from \"ethers\";\nimport { useMemo } from \"react\";\nimport type { ReactNode } from \"react\";\nimport { allChains, WagmiProvider } from \"wagmi\";\nimport type { Connector } from \"wagmi\";\nimport { InjectedConnector } from \"wagmi/connectors/injected\";\nimport { WalletConnectConnector } from \"wagmi/connectors/walletConnect\";\n\nconst getConnectors = (chainId: string): Connector[] => {\n  const chain = allChains.find((chain) => chain.id === Number(chainId));\n\n  if (!chain) {\n    throw new Error(\"CHAIN_ID not found: \" + chainId);\n  }\n\n  return [\n    new InjectedConnector({\n      chains: [chain],\n      options: { shimDisconnect: true },\n    }),\n    new WalletConnectConnector({\n      chains: [chain],\n      options: {\n        infuraId: window.ENV.INFURA_ID,\n        qrcode: true,\n      },\n    }),\n  ];\n};\n\nconst Wagmi = ({ children }: { children: ReactNode }) => {\n  const connectors = useMemo(() => getConnectors(window.ENV.CHAIN_ID), []);\n  const ethersProvider = useMemo(\n    () => new providers.JsonRpcProvider(window.ENV.RPC_URL),\n    []\n  );\n\n  return (\n    <WagmiProvider connectors={connectors} provider={ethersProvider}>\n      {children}\n    </WagmiProvider>\n  );\n};\n\nexport default Wagmi;\n", "import styled from \"styled-components\";\nimport type { ReactNode } from \"react\";\n\nimport { BottomBar } from \"./BottomBar\";\nimport { TopBar } from \"./TopBar\";\n\ntype AppLayoutProps = {\n  children: ReactNode;\n  displayTopBar?: boolean;\n  displayBottomBar?: boolean;\n};\nexport const AppLayout = ({\n  children,\n  displayTopBar = true,\n  displayBottomBar = true,\n}: AppLayoutProps) => (\n  <Container>\n    {displayTopBar && (\n      <div style={{ flex: \"none\" }}>\n        <TopBar />\n      </div>\n    )}\n    <ChildrenWrapper>{children}</ChildrenWrapper>\n    {displayBottomBar && (\n      <div style={{ flex: \"none\" }}>\n        <BottomBar />\n      </div>\n    )}\n  </Container>\n);\n\nconst Container = styled.div`\n  position: relative;\n  height: 100vh;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChildrenWrapper = styled.div`\n  display: flex;\n  flex: auto;\n  flex-direction: column;\n  scroll-behavior: smooth;\n`;\n", "import { GU, useTheme, useViewport } from \"@1hive/1hive-ui\";\nimport { a } from \"react-spring\";\nimport styled from \"styled-components\";\nimport { useAppReady } from \"~/providers/AppReady\";\nimport { BlossomLabsLogo } from \"~/components/BlossomLabsLogo\";\n\nconst OPACITY = 0.8;\nexport const BottomBar = () => {\n  const { below } = useViewport();\n  const theme = useTheme();\n  const { appReadyTransition } = useAppReady();\n  const compactMode = below(\"large\");\n\n  return (\n    <Container>\n      {appReadyTransition(\n        ({ progress, bottomBarTransform }, ready) =>\n          ready && (\n            <AnimatedContainer\n              style={{ opacity: progress, transform: bottomBarTransform }}\n              $compactMode={compactMode}\n            >\n              <div style={{ color: theme.surfaceContent, opacity: OPACITY }}>\n                powered by &nbsp; <BlossomLabsLogo />\n              </div>\n            </AnimatedContainer>\n          )\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  position: relative;\n  height: ${7 * GU}px;\n`;\n\nconst AnimatedContainer = styled(a.div)<{ $compactMode: boolean }>`\n  position: absolute;\n  inset: 0;\n  display: flex;\n  padding: 0 ${7 * GU}px;\n\n  justify-content: ${({ $compactMode }) =>\n    $compactMode ? \"center\" : \"flex-start\"};\n`;\n", "import { GU, useViewport } from \"@1hive/1hive-ui\";\nimport { a } from \"react-spring\";\nimport styled from \"styled-components\";\n\nimport { useAppReady } from \"~/providers/AppReady\";\nimport { AccountModule } from \"~/components/AccountModule\";\nimport { NavSection } from \"./NavSection\";\n\nexport const TopBar = () => {\n  const { appReadyTransition } = useAppReady();\n  const { below } = useViewport();\n  const compactMode = below(\"large\");\n  const mobileMode = below(\"medium\");\n\n  return (\n    <NavContainer>\n      {appReadyTransition(\n        ({ progress, topBarTransform }, ready) =>\n          ready && (\n            <AnimatedContainer\n              style={{\n                opacity: progress,\n                transform: topBarTransform,\n              }}\n              $compactMode={compactMode}\n            >\n              <NavSection compact={compactMode} />\n              <AccountModule compact={mobileMode} />\n            </AnimatedContainer>\n          )\n      )}\n    </NavContainer>\n  );\n};\n\nconst NavContainer = styled.nav`\n  position: relative;\n  margin: 0 auto;\n  height: ${8 * GU}px;\n`;\n\nconst AnimatedContainer = styled(a.div)<{ $compactMode: boolean }>`\n  position: absolute;\n  inset: 0;\n  border-bottom: 1px solid ${({ theme }) => theme.border};\n  ${({ $compactMode }) =>\n    $compactMode\n      ? `\n    padding-right: ${1 * GU}px;\n  `\n      : `\n    padding-right: ${5 * GU}px;\n    padding-left: ${5 * GU}px;\n  `};\n  display: flex;\n  justify-content: space-between;\n`;\n", "import { Button, GU, IconConnect } from \"@1hive/1hive-ui\";\nimport { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Chain, Connector, useAccount, useConnect, useNetwork } from \"wagmi\";\nimport { getNetworkError } from \"./helpers\";\nimport {\n  PromptedAction,\n  ScreenType,\n  actions,\n  useAccounModuleStore,\n} from \"./use-account-module-store\";\nimport { AccountButton } from \"./AccountButton\";\nimport { HeaderPopover } from \"./HeaderPopover\";\nimport {\n  ScreenConnected,\n  ScreenConnecting,\n  ScreenError,\n  ScreenPromptedAction,\n  ScreenWallets,\n} from \"./screens\";\n\nconst SCREENS = [\n  ScreenWallets,\n  ScreenConnecting,\n  ScreenError,\n  ScreenPromptedAction,\n  ScreenConnected,\n];\n\nconst { Connecting, Error, Action, Connected } = ScreenType;\n\nexport const AccountModule = ({ compact }: { compact?: boolean }) => {\n  const buttonRef = useRef();\n  const timer = useRef<NodeJS.Timeout>();\n  const [{ data: accountData, error: accountError }, disconnect] = useAccount();\n  const [{ error: connectError }, connect] = useConnect();\n  const [{ data: networkData, error: networkError }, switchNetwork] =\n    useNetwork();\n  const [promptedActionSucceeded, setPromptedActionSucceeded] = useState(false);\n  const error =\n    getNetworkError(networkError, networkData) || accountError || connectError;\n\n  const { currentScreen, opened, screenDirection } = useAccounModuleStore();\n\n  const displayAccountButton =\n    currentScreen === Connected && !error && accountData?.address;\n\n  const Screen = SCREENS[currentScreen];\n\n  const handlePopoverClose = () => {\n    if (\n      currentScreen === Connecting ||\n      currentScreen === Error ||\n      currentScreen === Action\n    ) {\n      // Reject closing the popover\n      return false;\n    }\n    actions.opened(false);\n  };\n\n  const handleSwitchNetwork = (switchAction: PromptedAction, chain: Chain) => {\n    if (switchNetwork) {\n      actions.promptedAction(switchAction);\n      actions.goToScreen(Action);\n      switchNetwork(chain.id)\n        .then(({ data, error }) => {\n          if (data) {\n            setPromptedActionSucceeded(true);\n          } else {\n            console.error(error);\n            actions.goToInitialScreen();\n            actions.promptedAction(null);\n          }\n        })\n        .catch((err) => console.error(err));\n    }\n  };\n\n  const handleConnect = (connector: Connector) => {\n    actions.selectedConnector(connector);\n    actions.goToScreen(Connecting);\n    /**\n     * Set a timer to always display connecting screen for\n     * a period of time\n     */\n    timer.current = setTimeout(() => {\n      connect(connector).then(({ data, error }) => {\n        if (data?.chain?.unsupported || error) {\n          actions.goToScreen(Error);\n        } else {\n          actions.goToScreen(Connected);\n        }\n      });\n    }, 500);\n  };\n\n  const handleBack = () => {\n    actions.goToInitialScreen();\n    disconnect();\n  };\n\n  useEffect(() => {\n    return () => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n    };\n  }, []);\n\n  /**\n   * Wait until network switching process is completed before going to\n   * the connected screen.\n   */\n  useEffect(() => {\n    if (promptedActionSucceeded && !networkData.chain?.unsupported) {\n      actions.goToScreen(Connected);\n      actions.promptedAction(null);\n      setPromptedActionSucceeded(false);\n    }\n  }, [promptedActionSucceeded, networkData.chain]);\n\n  return (\n    <Container ref={buttonRef}>\n      {displayAccountButton ? (\n        <AccountButton onClick={actions.toggleOpened} />\n      ) : (\n        <Button\n          icon={<IconConnect />}\n          label=\"Connect account\"\n          onClick={actions.toggleOpened}\n          display={compact ? \"icon\" : \"all\"}\n        />\n      )}\n      <HeaderPopover\n        direction={screenDirection}\n        onClose={handlePopoverClose}\n        opener={buttonRef.current}\n        screenId={currentScreen}\n        visible={opened}\n        width={(currentScreen === Connected ? 41 : 51) * GU}\n      >\n        <Screen\n          onConnect={handleConnect}\n          onSwitchNetwork={handleSwitchNetwork}\n          onBack={handleBack}\n        />\n      </HeaderPopover>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  outline: 0;\n`;\n", "import {\n  Chain,\n  ChainNotConfiguredError,\n  UserRejectedRequestError,\n} from \"wagmi\";\n\nimport metamask from \"./assets/metamask.svg\";\nimport walletconnect from \"./assets/walletconnect.svg\";\n\nconst chainNotConfiguredError = new ChainNotConfiguredError();\n\nexport const getWalletIconPath = (\n  id: string | undefined\n): string | undefined => {\n  switch (id) {\n    case \"injected\":\n      return metamask;\n    case \"walletConnect\":\n      return walletconnect;\n    default:\n      return;\n  }\n};\n\nexport const getNetworkError = (\n  networkError: Error | undefined,\n  networkData: { chain?: { unsupported: boolean | undefined }; chains: Chain[] }\n): Error | undefined => {\n  if (networkError) {\n    return networkError;\n  }\n\n  if (networkData.chain?.unsupported) {\n    return chainNotConfiguredError;\n  }\n};\n\nexport const isUserRejectedRequestError = (error: Error) =>\n  error instanceof UserRejectedRequestError;\n", "import { createStore } from \"@udecode/zustood\";\nimport { Connector } from \"wagmi\";\n\nexport enum ScreenType {\n  Wallets,\n  Connecting,\n  Error,\n  Action,\n  Connected,\n}\n\nexport type PromptedAction = {\n  title: string;\n  subtitle?: string;\n  image?: string;\n};\n\ntype AccountModuleState = {\n  opened: boolean;\n  promptedAction: PromptedAction | null;\n  selectedConnector: Connector | null;\n  currentScreen: ScreenType;\n  screenDirection: -1 | 1;\n};\n\nconst initialState: AccountModuleState = {\n  opened: false,\n  promptedAction: null,\n  selectedConnector: null,\n  currentScreen: ScreenType.Wallets,\n  screenDirection: -1,\n};\n\nconst accountModuleStore = createStore(\"account-module\")(initialState, {\n  devtools: { enabled: process.env.NODE_ENV === \"development\" },\n})\n  .extendActions((set, get) => ({\n    toggleOpened: () => set.opened(!get.opened()),\n    reset: () => {\n      const {\n        opened,\n        promptedAction,\n        selectedConnector,\n        currentScreen,\n        screenDirection,\n      } = initialState;\n\n      set.opened(opened);\n      set.promptedAction(promptedAction);\n      set.selectedConnector(selectedConnector);\n      set.currentScreen(currentScreen);\n      set.screenDirection(screenDirection);\n    },\n    goToScreen: (screen: ScreenType) => {\n      const previousScreen = get.currentScreen();\n      const screenDirection = previousScreen > screen ? -1 : 1;\n\n      set.currentScreen(screen);\n      set.screenDirection(screenDirection);\n    },\n  }))\n  .extendActions((set) => ({\n    goToInitialScreen: () => {\n      set.reset();\n      set.opened(true);\n    },\n  }));\n\nexport const useAccounModuleStore = accountModuleStore.useStore;\nexport const actions = accountModuleStore.set;\n", "import {\n  ButtonBase,\n  EthIdenticon,\n  GU,\n  IconDown,\n  RADIUS,\n  shortenAddress,\n  textStyle,\n  useTheme,\n  useViewport,\n} from \"@1hive/1hive-ui\";\nimport { Fragment } from \"react\";\nimport type { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { useAccount, useNetwork } from \"wagmi\";\n\ntype AccountButtonWrapperProps = {\n  content: ReactNode;\n  hasPopover: boolean;\n  icon?: string | ReactNode;\n  onClick?: () => void;\n};\n\nconst AccountButtonWrapper = ({\n  content,\n  hasPopover = false,\n  icon,\n  onClick,\n}: AccountButtonWrapperProps) => {\n  const { above } = useViewport();\n  const theme = useTheme();\n\n  return (\n    <AccountButtonBase onClick={onClick}>\n      <InnerContainer>\n        <>\n          {icon}\n          {above(\"medium\") && (\n            <Fragment>\n              <div\n                style={{\n                  paddingLeft: `${1 * GU}px`,\n                  paddingRight: `${0.5 * GU}px`,\n                }}\n              >\n                {content}\n              </div>\n              {hasPopover && (\n                <IconDown size=\"small\" color={theme.surfaceIcon} />\n              )}\n            </Fragment>\n          )}\n        </>\n      </InnerContainer>\n    </AccountButtonBase>\n  );\n};\n\ntype AccountButtonProps = {\n  onClick: () => void;\n};\n\nexport const AccountButton = ({ onClick }: AccountButtonProps) => {\n  const theme = useTheme();\n  const [{ data: accountData }] = useAccount({ fetchEns: true });\n  const [{ data: networkData }] = useNetwork();\n  const { address, ens } = accountData || {};\n\n  return (\n    <AccountButtonWrapper\n      hasPopover\n      onClick={onClick}\n      icon={\n        <div style={{ position: \"relative\" }}>\n          <EthIdenticon address={address} radius={RADIUS} />\n          <ConnectedCircle />\n        </div>\n      }\n      content={\n        <>\n          {!!address && (\n            <LabelWrapper>\n              <LabelInnerWrapper>\n                {ens?.name || shortenAddress(address ?? \"\")}\n              </LabelInnerWrapper>\n            </LabelWrapper>\n          )}\n          <div\n            style={{\n              fontSize: \"11px\", //  doesn\u2019t exist in aragonUI\n              color: theme.positive,\n            }}\n          >\n            Connected to {networkData.chain?.name}\n          </div>\n        </>\n      }\n    />\n  );\n};\n\nconst AccountButtonBase = styled(ButtonBase)`\n  height: 100%;\n  padding: ${0.2 * GU}px;\n  ${(props) =>\n    props.onClick !== undefined\n      ? `&:active { background: ${props.theme.surfacePressed}; }`\n      : `cursor: auto;`};\n`;\n\nconst InnerContainer = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: left;\n  padding: 0 ${1 * GU}px;\n`;\n\nconst ConnectedCircle = styled.div`\n  position: absolute;\n  bottom: -3px;\n  right: -3px;\n  width: 10px;\n  height: 10px;\n  background: ${(props) => props.theme.positive};\n  border: 2px solid ${(props) => props.theme.surface};\n  border-radius: 50%;\n`;\n\nconst LabelWrapper = styled.div`\n  margin-bottom: -5px;\n\n  ${textStyle(\"body2\")};\n`;\n\nconst LabelInnerWrapper = styled.div`\n  overflow: hidden;\n  max-width: ${16 * GU}px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n", "import { GU, Popover, springs } from \"@1hive/1hive-ui\";\nimport { useEffect, useRef, useState } from \"react\";\nimport type { ReactNode } from \"react\";\nimport { a, Spring, useTransition } from \"react-spring\";\nimport styled from \"styled-components\";\n\ntype PopoverProps = {\n  children: ReactNode;\n  direction: -1 | 1;\n  heading?: string;\n  onClose: () => void;\n  opener: ReactNode;\n  screenId: number | string;\n  visible: boolean;\n  width: number | string;\n};\n\nexport const HeaderPopover = ({\n  children,\n  direction,\n  onClose,\n  opener,\n  screenId,\n  visible,\n  width,\n}: PopoverProps) => {\n  const [height, setHeight] = useState(30 * GU);\n\n  // Prevents to lose the focus on the popover when a screen leaves while an\n  // element inside is focused (e.g. when clicking on the \u201Cdisconnect\u201D button).\n  const popoverFocusElement = useRef();\n\n  const popupTransition = useTransition(screenId, {\n    config: springs.smooth,\n    keys: screenId,\n    from: {\n      opacity: 0,\n      transform: `translate3d(${10 * GU * direction}px, 0, 0)`,\n    },\n    enter: {\n      opacity: 1,\n      transform: `translate3d(0, 0, 0)`,\n    },\n  });\n\n  useEffect(() => {\n    if (popoverFocusElement.current) {\n      popoverFocusElement.current.focus();\n    }\n  }, [screenId]);\n\n  return (\n    <StyledPopover\n      closeOnOpenerFocus\n      onClose={onClose}\n      opener={opener}\n      placement=\"bottom-end\"\n      visible={visible}\n      width={width}\n    >\n      <Container>\n        <Spring\n          config={springs.smooth}\n          from={{ height: 32 * GU }}\n          to={{ height }}\n        >\n          {({ height }) => (\n            <a.div\n              ref={popoverFocusElement}\n              tabIndex={0}\n              style={{\n                height: height,\n                position: \"relative\",\n                flexGrow: 1,\n                width: \"100%\",\n                overflow: \"hidden\",\n                outline: 0,\n              }}\n            >\n              {popupTransition(({ opacity, transform }) => (\n                <a.div\n                  ref={(elt) => {\n                    if (elt) {\n                      setHeight(elt.clientHeight);\n                    }\n                  }}\n                  style={{\n                    opacity,\n                    transform,\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                  }}\n                >\n                  {children}\n                </a.div>\n              ))}\n            </a.div>\n          )}\n        </Spring>\n      </Container>\n    </StyledPopover>\n  );\n};\n\nconst Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst StyledPopover = styled(Popover)`\n  margin-top: 3px;\n  width: ${(props) => `${props.width}px`};\n`;\n", "export { ScreenPromptedAction } from \"./ScreenPromptedAction\";\nexport { ScreenConnected } from \"./ScreenConnected\";\nexport { ScreenConnecting } from \"./ScreenConnecting\";\nexport { ScreenError } from \"./ScreenError\";\nexport { ScreenWallets } from \"./ScreenWallets\";\n", "import { GU, textStyle } from \"@1hive/1hive-ui/\";\nimport styled from \"styled-components\";\n\nimport { LoadingRing } from \"../LoadingRing\";\nimport { useAccounModuleStore } from \"../use-account-module-store\";\n\nexport const ScreenPromptedAction = () => {\n  const { promptedAction } = useAccounModuleStore();\n\n  if (!promptedAction) {\n    return null;\n  }\n\n  const { title, subtitle, image } = promptedAction;\n\n  return (\n    <Container>\n      <ActionContainer>\n        <SpinnerContainer>\n          <LoadingRing />\n          {image && <ActionImage src={image} />}\n        </SpinnerContainer>\n        <Title>{title}</Title>\n        <Subtitle>{subtitle}</Subtitle>\n      </ActionContainer>\n    </Container>\n  );\n};\n\nconst Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: ${2 * GU}px;\n  height: 100%;\n`;\n\nconst ActionContainer = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst SpinnerContainer = styled.div`\n  position: relative;\n  width: ${10.5 * GU}px;\n  height: ${10.5 * GU}px;\n`;\n\nconst ActionImage = styled.div<{ src: string }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: 50% 50% / auto ${5 * GU}px no-repeat url(${(props) => props.src});\n`;\n\nconst Title = styled.h1`\n  padding-top: ${2 * GU}px;\n  font-weight: 600;\n  ${textStyle(\"body1\")};\n`;\n\nconst Subtitle = styled.p`\n  width: ${36 * GU}px;\n  margin-top: ${1 * GU}px;\n  color: ${(props) => props.theme.surfaceContentSecondary};\n`;\n", "import styled, { keyframes } from \"styled-components\";\n\nimport loadingRing from \"./assets/loading-ring.svg\";\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const LoadingRing = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: url(${loadingRing}) no-repeat 0 0;\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n  animation-name: ${spin};\n  // prevents flickering on Firefox\n  backface-visibility: hidden;\n`;\n", "import {\n  Button,\n  ButtonBase,\n  GU,\n  IconCheck,\n  IconCopy,\n  IdentityBadge,\n  RADIUS,\n  textStyle,\n  useTheme,\n} from \"@1hive/1hive-ui\";\nimport { useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useAccount, useNetwork } from \"wagmi\";\n\nimport { useCopyToClipboard } from \"~/hooks/useCopyToClipboard\";\nimport { getWalletIconPath } from \"../helpers\";\nimport { ScreenType, actions } from \"../use-account-module-store\";\n\ntype ScreenConnectedProps = {\n  onBack(): void;\n};\n\nexport const ScreenConnected = ({ onBack }: ScreenConnectedProps) => {\n  const theme = useTheme();\n  const copy = useCopyToClipboard();\n  const [{ data: networkData }] = useNetwork();\n  const [{ data: accountData }] = useAccount();\n\n  const chain = networkData.chain;\n  const wallet = accountData?.connector;\n  const accountAddress = accountData?.address;\n\n  useEffect(() => {\n    if (networkData.chain?.unsupported || !accountAddress) {\n      actions.goToScreen(ScreenType.Error);\n    }\n  }, [networkData.chain, accountAddress]);\n\n  const handleCopyAddress = useCallback(\n    () => copy(accountAddress),\n    [accountAddress, copy]\n  );\n\n  return (\n    <div\n      style={{\n        padding: 2 * GU,\n      }}\n    >\n      <Title>Active Wallet</Title>\n      <div style={{ display: \"flex\", alignItems: \"center\", width: \"100%\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"flex-end\",\n            marginRight: 3 * GU,\n          }}\n        >\n          <WalletIcon\n            src={getWalletIconPath(wallet?.id)}\n            alt=\"\"\n            size={3 * GU}\n          />\n          <span>{wallet?.id === \"unknown\" ? \"Wallet\" : wallet?.name}</span>\n        </div>\n        <div style={{ width: \"100%\" }}>\n          <CopyButton onClick={handleCopyAddress} focusRingRadius={RADIUS}>\n            <IdentityBadge\n              entity={accountAddress}\n              compact\n              badgeOnly\n              style={{ cursor: \"pointer\" }}\n            />\n            <IconCopy style={{ verticalAlign: \"middle\" }} color={theme.hint} />\n          </CopyButton>\n        </div>\n      </div>\n      <div style={{ padding: `${2 * GU}px 0` }}>\n        <NetworkInfo>\n          <IconCheck size=\"small\" />\n          <span style={{ marginLeft: 0.5 * GU }}>\n            {`Connected to ${chain ? chain.name : \"Unknown\"} Network`}\n          </span>\n        </NetworkInfo>\n      </div>\n      <Button onClick={onBack} wide style={{ marginTop: 1 * GU }}>\n        Disconnect wallet\n      </Button>\n    </div>\n  );\n};\n\nconst Title = styled.h4`\n  color: ${(props) => props.theme.contentSecondary};\n  margin-bottom: ${2 * GU}px, ${textStyle(\"label2\")};\n  ${textStyle(\"label2\")};\n`;\n\nconst WalletIcon = styled.img<{ size: string | number }>`\n  ${({ size }) => size && `width: ${size}px; height: ${size}px;`};\n  margin-right: ${0.5 * GU}px;\n  transform: translateY(-2px);\n`;\n\nconst CopyButton = styled(ButtonBase)`\n  display: flex;\n  align-items: center;\n  justify-self: flex-end;\n  padding: ${0.5 * GU}px;\n  &:active {\n    background: ${(props) => props.theme.surfacePressed};\n  }\n`;\n\nconst NetworkInfo = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${(props) => props.theme.positive};\n  ${textStyle(\"label2\")};\n`;\n", "import { useCallback } from \"react\"\nimport { useToast } from \"@1hive/1hive-ui\"\nimport { writeText as copy } from \"clipboard-polyfill\"\n\nexport function useCopyToClipboard() {\n  const toast = useToast()\n\n  return useCallback(\n    (text, confirmationMessage = \"Copied\") => {\n      copy(text)\n      if (confirmationMessage) {\n        toast(confirmationMessage)\n      }\n    },\n    [toast]\n  )\n}\n", "import { GU, textStyle, useTheme } from \"@1hive/1hive-ui\";\nimport styled from \"styled-components\";\n\nimport { getWalletIconPath } from \"../helpers\";\nimport { LoadingRing } from \"../LoadingRing\";\nimport { useAccounModuleStore } from \"../use-account-module-store\";\n\nexport const ScreenConnecting = () => {\n  const theme = useTheme();\n  const { selectedConnector: wallet } = useAccounModuleStore();\n\n  if (!wallet) {\n    return null;\n  }\n\n  const walletIcon = getWalletIconPath(wallet.id);\n\n  return (\n    <Container>\n      <SpinnerContainer>\n        <LoadingRing />\n        {walletIcon && <SpinnerImage src={walletIcon} />}\n      </SpinnerContainer>\n      <Title>Connecting to {wallet.name}</Title>\n      <p\n        style={{ width: `${36 * GU}px`, color: theme.surfaceContentSecondary }}\n      >\n        Log into {wallet.name || \"Unknown\"}. You may be temporarily redirected\n        to a new screen.\n      </p>\n    </Container>\n  );\n};\n\nconst Container = styled.section`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: ${2 * GU}px;\n  height: 100%;\n  text-align: center;\n`;\n\nconst SpinnerContainer = styled.div`\n  position: relative;\n  width: ${10.5 * GU}px;\n  height: ${10.5 * GU}px;\n`;\n\nconst SpinnerImage = styled.div<{ src: string }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: 50% 50% / auto ${5 * GU}px no-repeat url(${(props) => props.src});\n`;\n\nconst Title = styled.h1`\n  padding-top: ${2 * GU}px;\n  font-weight: 600;\n  ${textStyle(\"body1\")};\n`;\n", "import {\n  Button,\n  GU,\n  IconError,\n  Link,\n  textStyle,\n  useTheme,\n} from \"@1hive/1hive-ui\";\nimport { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Chain,\n  ChainNotConfiguredError,\n  useAccount,\n  useConnect,\n  useNetwork,\n} from \"wagmi\";\n\nimport { getNetworkLogo } from \"~/utils/client/icons.client\";\nimport { getNetworkError } from \"../helpers\";\nimport type { PromptedAction } from \"../use-account-module-store\";\n\nconst buildSwitchAction = (chain: Chain): PromptedAction => ({\n  title: `Connecting to ${chain.name} network`,\n  subtitle: `Creating and/or switching to the ${chain.name} network (id: ${chain.id}) in your wallet. You may be temporarily redirected to a new screen.`,\n  image: getNetworkLogo(chain.id),\n});\n\ntype ScreenErrorProps = {\n  onSwitchNetwork(switchAction: PromptedAction, chain: Chain): void;\n  onBack(): void;\n};\n\nexport const ScreenError = ({ onSwitchNetwork, onBack }: ScreenErrorProps) => {\n  const theme = useTheme();\n  const [{ data: networkData, error: networkError }, switchNetwork] =\n    useNetwork();\n  const [{ error: connectError }] = useConnect();\n  const [{ error: accountError }] = useAccount();\n\n  const error =\n    getNetworkError(networkError, networkData) || connectError || accountError;\n\n  const [title, secondary] = useMemo(() => {\n    if (\n      error instanceof ChainNotConfiguredError ||\n      networkData.chain?.unsupported\n    ) {\n      return [\n        \"Wrong network\",\n        <span key=\"\">\n          Please select one of these networks:{\" \"}\n          {networkData.chains.map((chain, index, chains) =>\n            switchNetwork ? (\n              <Link\n                key={chain.id}\n                onClick={() => {\n                  onSwitchNetwork(buildSwitchAction(chain), chain);\n                }}\n              >\n                {`${chain.name}${index < chains.length - 1 ? \", \" : \"\"}`}\n              </Link>\n            ) : (\n              <>{chain.name}</>\n            )\n          )}\n        </span>,\n      ];\n    }\n\n    return [\n      \"Failed to enable your account\",\n      \"You can try another Ethereum wallet.\",\n    ];\n  }, [error, networkData, onSwitchNetwork, switchNetwork]);\n\n  return (\n    <Container>\n      <ErrorContainer>\n        <div style={{ marginBottom: -2 * GU }}>\n          <IconError\n            style={{ width: \"130px\", height: \"130px\" }}\n            color={theme.negative}\n          />\n        </div>\n        <Title>{title}</Title>\n        <p\n          style={{\n            width: 36 * GU,\n            color: theme.surfaceContentSecondary,\n          }}\n        >\n          {secondary}\n        </p>\n      </ErrorContainer>\n      <ButtonContainer>\n        <Button onClick={onBack} wide>\n          Go back\n        </Button>\n      </ButtonContainer>\n    </Container>\n  );\n};\n\nconst Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: ${2 * GU}px;\n  padding-top: ${1 * GU}px;\n  height: 100%;\n`;\n\nconst ErrorContainer = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  font-weight: 600;\n  ${textStyle(\"body1\")};\n`;\n\nconst ButtonContainer = styled.div`\n  flex-grow: 0;\n  margin-top: ${1 * GU}px;\n  width: 100%;\n`;\n", "import { ButtonBase, GU, Link, RADIUS, textStyle } from \"@1hive/1hive-ui\";\nimport styled from \"styled-components\";\nimport { Connector, useConnect } from \"wagmi\";\n\nimport { getWalletIconPath } from \"../helpers\";\n\nexport const ScreenWallets = ({\n  onConnect,\n}: {\n  onConnect(connector: Connector): void;\n}) => {\n  const [{ data: connectData }] = useConnect();\n\n  return (\n    <div>\n      <MainHeader>Ethereum Wallets</MainHeader>\n      <Container>\n        <WalletButtonsContainer>\n          {connectData.connectors.map((connector) => {\n            return (\n              <WalletButton\n                key={connector.id}\n                icon={getWalletIconPath(connector.id)}\n                name={connector.name}\n                ready={connector.ready}\n                onClick={() => onConnect(connector)}\n              />\n            );\n          })}\n        </WalletButtonsContainer>\n        <LinkContainer>\n          <Link href=\"https://ethereum.org/wallets/\" external>\n            What is a wallet?\n          </Link>\n        </LinkContainer>\n      </Container>\n    </div>\n  );\n};\n\ntype WalletButtonProps = {\n  icon?: string;\n  name?: string;\n  ready?: boolean;\n  onClick: (connector: Connector) => void;\n};\n\nfunction WalletButton({\n  icon,\n  name,\n  ready = true,\n  onClick,\n}: WalletButtonProps): JSX.Element {\n  return (\n    <WalletButtonBase onClick={onClick} disabled={!ready} ready={ready}>\n      {name && (\n        <>\n          {icon && (\n            <img style={{ height: `${5.25 * GU}px` }} src={icon} alt=\"\" />\n          )}\n          <WalletName>{name}</WalletName>\n          {!ready && <Subtitle>(Unsupported)</Subtitle>}\n        </>\n      )}\n    </WalletButtonBase>\n  );\n}\n\nconst MainHeader = styled.h4`\n  padding-top: ${2 * GU}px;\n  padding-left: ${2 * GU}px;\n  color: ${(props) => props.theme.contentSecondary};\n  margin-bottom: ${2 * GU}px;\n  ${textStyle(\"label2\")};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  padding: ${2 * GU}px ${2 * GU}px 0;\n`;\n\nconst WalletButtonsContainer = styled.div`\n  display: grid;\n  grid-gap: ${1.5 * GU}px;\n  grid-auto-flow: row;\n  grid-template-columns: repeat(2, 1fr);\n`;\n\nconst LinkContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${2 * GU}px;\n  margin-bottom: ${1 * GU}px;\n`;\n\nconst WalletButtonBase = styled(ButtonBase)`\n  position: relative;\n  opacity: ${(props) => (props.ready ? 1 : 0.6)};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: ${12 * GU}px;\n  background: ${(props) => props.surface};\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.15);\n  border-radius: ${RADIUS}px;\n  &:active {\n    top: 1px;\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst WalletName = styled.div`\n  margin-top: ${1 * GU}px;\n  ${textStyle(\"body1\")};\n`;\n\nconst Subtitle = styled.div`\n  margin-top: ${-0.5 * GU}px;\n  ${textStyle(\"body4\")};\n`;\n", "import { GU, textStyle } from \"@1hive/1hive-ui\";\nimport { NavLink } from \"@remix-run/react\";\nimport styled from \"styled-components\";\nimport { CompactMenu } from \"./CompactMenu\";\n\nexport type NavigationItem = {\n  icon: string;\n  label: string;\n  to: string;\n};\n\nconst navigationItem: NavigationItem[] = [\n  { icon: \"\", label: \"Home\", to: \"/home\" },\n  { icon: \"\", label: \"All Entries\", to: \"/entries\" },\n  { icon: \"\", label: \"Guidelines\", to: \"/guidelines\" },\n];\n\nexport const NavSection = ({ compact }: { compact: boolean }) => {\n  return compact ? (\n    <CompactMenu items={navigationItem} />\n  ) : (\n    <NavLinksList>\n      {navigationItem.map(({ label, to }) => (\n        <li key={label}>\n          <NavLink to={to}>{label === \"Home\" ? \"Rosette\" : label}</NavLink>\n        </li>\n      ))}\n    </NavLinksList>\n  );\n};\n\nconst NavLinksList = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: ${6 * GU}px;\n  list-style: none;\n\n  li:first-child {\n    ${textStyle(\"title2\")};\n  }\n\n  > li {\n    transition: all 200ms ease-out;\n    &:hover {\n      color: ${(props) => props.theme.surfaceHighlight};\n    }\n  }\n\n  li > * {\n    text-decoration: none;\n  }\n`;\n", "import { ButtonBase, GU, IconMenu, useViewport } from \"@1hive/1hive-ui\";\nimport { useState } from \"react\";\nimport { useLocation } from \"@remix-run/react\";\nimport styled from \"styled-components\";\nimport type { NavigationItem } from \"..\";\nimport { MenuItem } from \"./MenuItem\";\nimport { Sidebar } from \"./Sidebar\";\n\nconst MenuButton = ({ onClick }: { onClick(): void }) => (\n  <ButtonContainer>\n    <ButtonBase\n      onClick={onClick}\n      css={`\n        display: flex;\n        align-items: center;\n      `}\n    >\n      <StyledMenuIcon color=\"grey\" />\n    </ButtonBase>\n  </ButtonContainer>\n);\n\nconst MIN_SIDEBAR_WIDTH = 240;\n\nexport const CompactMenu = ({ items }: { items: NavigationItem[] }) => {\n  const { pathname } = useLocation();\n  const { width } = useViewport();\n  const [displaySidebar, setDisplaySidebar] = useState(false);\n\n  const sidebarWidth = Math.min(MIN_SIDEBAR_WIDTH, width * 0.6);\n\n  const toggleSidebar = () => setDisplaySidebar((prev) => !prev);\n\n  return (\n    <div>\n      <MenuButton onClick={toggleSidebar} />\n      <Sidebar\n        width={sidebarWidth}\n        show={displaySidebar}\n        onToggle={toggleSidebar}\n      >\n        <NavContainer>\n          {items.map((i) => (\n            <li key={i.label}>\n              <MenuItem\n                item={i}\n                active={pathname === i.to}\n                onClick={toggleSidebar}\n              />\n            </li>\n          ))}\n        </NavContainer>\n      </Sidebar>\n    </div>\n  );\n};\n\nconst ButtonContainer = styled.div`\n  width: ${8 * GU}px;\n  height: 100%;\n  border-right: 1px solid ${({ theme }) => theme.border};\n  display: flex;\n  align-self: stretch;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledMenuIcon = styled(IconMenu)`\n  width: ${4 * GU}px;\n  height: ${4 * GU}px;\n`;\n\nconst NavContainer = styled.ul`\n  list-style: none;\n`;\n", "import { GU, useTheme } from \"@1hive/1hive-ui\";\nimport { Link } from \"@remix-run/react\";\nimport styled from \"styled-components\";\nimport type { NavigationItem } from \"..\";\n\ntype MenuItemProps = {\n  item: NavigationItem;\n  active?: boolean;\n  onClick(): void;\n};\n\nexport const MenuItem = ({\n  item: { icon, label, to },\n  active = false,\n  onClick,\n}: MenuItemProps) => {\n  const theme = useTheme();\n\n  return (\n    <div style={{ position: \"relative\" }} onClick={onClick}>\n      {active && <ActiveBar />}\n      <Link\n        to={to}\n        style={{\n          display: \"block\",\n          width: \"100%\",\n          backgroundColor: active ? theme.surfaceHighlight : theme.background,\n          textDecoration: \"none\",\n        }}\n      >\n        <InnerNavLink>\n          {icon && <img src={icon} alt=\"\" />}\n          <span>{label}</span>\n        </InnerNavLink>\n      </Link>\n    </div>\n  );\n};\n\nconst ActiveBar = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 4px;\n  background: #7c5fe0;\n`;\n\nconst InnerNavLink = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${1 * GU}px;\n  padding: ${1.5 * GU}px;\n\n  & img {\n    width: 20px;\n    height: 20px;\n  }\n\n  & > span {\n    color: ${({ theme }) => theme.content};\n  }\n`;\n", "import { RootPortal } from \"@1hive/1hive-ui\";\nimport type { ReactNode } from \"react\";\nimport { a, useTransition } from \"react-spring\";\nimport styled from \"styled-components\";\n\ntype SidebarProps = {\n  children: ReactNode;\n  show: boolean;\n  width: number;\n  onToggle(): void;\n};\n\nexport const Sidebar = ({ children, show, width, onToggle }: SidebarProps) => {\n  const sidebarTransition = useTransition(show, {\n    from: {\n      marginLeft: `-${width}px`,\n      opacity: 0,\n    },\n    enter: {\n      marginLeft: \"0\",\n      opacity: 1,\n    },\n    leave: {\n      marginLeft: `-${width}px`,\n      opacity: 0,\n    },\n    unique: true,\n    config: { mass: 5, tension: 1500, friction: 200 },\n    delay: 100,\n  });\n\n  return sidebarTransition((styles, show) => {\n    return (\n      show && (\n        <RootPortal>\n          <AnimatedSidebar\n            style={{ marginLeft: styles.marginLeft }}\n            width={width}\n            $zIndex={3}\n          >\n            {children}\n          </AnimatedSidebar>\n          <OpaqueBackground\n            style={styles}\n            $show={show}\n            $offset={width}\n            onClick={onToggle}\n          />\n        </RootPortal>\n      )\n    );\n  });\n};\n\nconst AnimatedSidebar = styled(a.div)<{ width: number; $zIndex: number }>`\n  height: 100vh;\n  position: absolute;\n  border-right: 1px solid ${({ theme }) => theme.border};\n  background-color: ${({ theme }) => theme.background};\n  ${({ width, $zIndex }) => `\n    z-index: ${$zIndex};\n    width: ${width}px;\n    top: 0;\n    bottom: 0;\n    left: 0;\n  `};\n`;\n\nconst OpaqueBackground = styled(a.div)<{ $offset: number; $show: boolean }>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: ${({ $offset }) => $offset}px;\n  z-index: 1;\n  height: 100%;\n  background: ${({ theme }) => theme.overlay.alpha(0.7)};\n  pointer-events: ${({ $show }) => ($show ? \"auto\" : \"none\")};\n`;\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { fetchContractFnEntries } from \"~/utils/server/subgraph.server\";\n\nexport const loader: LoaderFunction = ({ request }) => {\n  const { searchParams } = new URL(request.url);\n  const bytecodeHash = searchParams.get(\"bytecodeHash\");\n\n  if (!bytecodeHash) {\n    throw new Response(\"Expected contract param\", {\n      status: 400,\n      statusText: \"Expected search params\",\n    });\n  }\n\n  return fetchContractFnEntries(bytecodeHash);\n};\n", "import type { FnEntry } from \"~/types\";\nimport { FnDescriptionStatus } from \"~/types\";\n\ntype FunctionResult = {\n  notice: string;\n  sigHash: string;\n  submitter: string;\n  disputed: boolean;\n  guideline: {\n    cooldownPeriod: number;\n  };\n  upsertAt: number;\n};\n\ntype QueryResult = {\n  data: {\n    contract: {\n      functions: FunctionResult[];\n    };\n  };\n  errors?: { message: string }[];\n};\n\nconst gql = String.raw;\n\nconst fetchFromGraphQL = async (query: string) => {\n  if (!process.env.SUBGRAPH_URI) {\n    throw new Error(\"SUBGRAPH_URI is required\");\n  }\n\n  const body: any = { query };\n\n  return fetch(process.env.SUBGRAPH_URI, {\n    body: JSON.stringify(body),\n    headers: { \"Content-Type\": \"application/json\" },\n    method: \"POST\",\n  });\n};\n\nconst getEntryStatus = (fnResult: FunctionResult): FnDescriptionStatus => {\n  const date = Date.now() / 1000;\n\n  if (fnResult.disputed) {\n    return FnDescriptionStatus.Challenged;\n  }\n\n  const timeSince = fnResult.upsertAt + fnResult.guideline.cooldownPeriod;\n\n  if (timeSince > date) {\n    return FnDescriptionStatus.Added;\n  } else {\n    return FnDescriptionStatus.Pending;\n  }\n};\n\nconst parseFnResult = (fnResult: FunctionResult): FnEntry => {\n  const { notice, sigHash, submitter, upsertAt } = fnResult;\n\n  return {\n    notice,\n    sigHash,\n    status: getEntryStatus(fnResult),\n    submitter,\n    upsertAt,\n  };\n};\n\nexport const fetchContractFnEntries = async (\n  bytecodeHash: string\n): Promise<FnEntry[]> => {\n  const contractId = `${process.env.ROSETTE_STONE_ADDRESS}-${bytecodeHash}`;\n\n  try {\n    const rawResponse = await fetchFromGraphQL(\n      gql`\n        {\n          contract(id: \"${contractId}\") {\n            functions {\n              notice\n              sigHash\n              submitter\n              guideline {\n                cooldownPeriod\n              }\n              upsertAt\n            }\n          }\n        }\n      `\n    );\n\n    const result = (await rawResponse.json()) as QueryResult;\n\n    if (result.errors?.length) {\n      const err = result.errors[0];\n      console.error(err);\n      throw new Error(err.message);\n    }\n\n    if (!result.data.contract) {\n      return [];\n    }\n\n    return result.data.contract.functions.map(parseFnResult);\n  } catch (err) {\n    throw new Response(\n      \"There was an error fetching the contract's function descriptions\",\n      { status: 500, statusText: \"Subgraph Error\" }\n    );\n  }\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport type { UserFnDescription } from \"~/types\";\nimport { ipfs } from \"~/utils/server/ipfs.server\";\n\ntype IPFSResponseData = Record<string, string>;\n\nconst FN_DESCRIPTIONS_KEY = \"fnDescriptions\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const data = await request.formData();\n\n  if (!data.has(FN_DESCRIPTIONS_KEY)) {\n    return new Response(\"Function descriptions not provided\", { status: 400 });\n  }\n\n  const fnDescriptions = JSON.parse(\n    data.get(FN_DESCRIPTIONS_KEY)!.toString()\n  ) as UserFnDescription[];\n  const uploadRequests = fnDescriptions.map(({ description, minimalName }) => {\n    const descriptionJson = JSON.stringify({\n      abi: minimalName,\n      notice: description,\n    });\n\n    return ipfs.add(descriptionJson);\n  });\n\n  try {\n    const addResults = await Promise.all(uploadRequests);\n\n    const responseData = addResults.reduce((data, addResult, index) => {\n      const fnDescription = fnDescriptions[index];\n      data[fnDescription.sigHash] = addResult.cid.toString();\n      return data;\n    }, {} as IPFSResponseData);\n\n    return json(responseData);\n  } catch (err) {\n    console.error(err);\n    throw new Response(\n      \"An error occured when uploading function descriptions\",\n      { status: 500 }\n    );\n  }\n};\n", "import type { IPFSHTTPClient, Options } from \"ipfs-http-client\";\nimport { create } from \"ipfs-http-client\";\n\ndeclare global {\n  var __ipfs: IPFSHTTPClient | undefined;\n}\n\nlet ipfs: IPFSHTTPClient;\n\nconst INFURA_IPFS_API_KEY = process.env.INFURA_IPFS_API_KEY;\n\nif (!INFURA_IPFS_API_KEY) {\n  throw new Error(\"INFURA_IPFS_API_KEY not found\");\n}\n\nconst codifiedBasicAuth = Buffer.from(INFURA_IPFS_API_KEY).toString(\"base64\");\n\nconst config: Options = {\n  url: \"https://ipfs.infura.io:5001\",\n  headers: { Authorization: `Basic ${codifiedBasicAuth}` },\n};\n\nif (process.env.NODE_ENV === \"production\") {\n  ipfs = create(config);\n} else {\n  if (!global.__ipfs) {\n    global.__ipfs = create(config);\n  }\n  ipfs = global.__ipfs;\n}\n\nexport { ipfs };\n", "import { utils } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { useCatch, useFetcher, useLoaderData } from \"@remix-run/react\";\nimport styled from \"styled-components\";\nimport { AppScreen } from \"~/components/AppLayout/AppScreen\";\nimport { ContractDescriptorScreen } from \"~/components/ContractDescriptorScreen\";\nimport { ContractSelectorScreen } from \"~/components/ContractSelectorScreen\";\nimport { SmoothDisplayContainer } from \"~/components/SmoothDisplayContainer\";\nimport type { ContractData, AggregateContract } from \"~/types\";\nimport { fetchContracts } from \"~/utils/server/contract-data.server\";\n\ntype LoaderData = {\n  contractAddress: string;\n  contracts: AggregateContract[];\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const { searchParams } = new URL(request.url);\n  const contractAddress = searchParams.get(\"contract\");\n\n  if (!contractAddress) {\n    throw new Response(\"Expected contract param\", {\n      status: 400,\n      statusText: \"Expected search params\",\n    });\n  }\n\n  const contracts = await fetchContracts(contractAddress);\n\n  return json({ contracts });\n};\n\nexport default function Describe() {\n  const { contracts } = useLoaderData<LoaderData>();\n  const contractDescriptionsFetcher = useFetcher();\n  const [selectedContractData, setSelectedContractData] =\n    useState<ContractData>();\n\n  useEffect(() => {\n    if (\n      !selectedContractData?.bytecode ||\n      contractDescriptionsFetcher.type !== \"init\"\n    ) {\n      return;\n    }\n\n    contractDescriptionsFetcher.load(\n      `/contract-descriptions-search?bytecodeHash=${utils.id(\n        selectedContractData.bytecode\n      )}`\n    );\n  }, [selectedContractData?.bytecode, contractDescriptionsFetcher]);\n\n  return (\n    <AppScreen hideBottomBar>\n      <Container>\n        {selectedContractData && contractDescriptionsFetcher.type === \"done\" ? (\n          <SmoothDisplayContainer>\n            <ContractDescriptorScreen\n              contractData={selectedContractData}\n              currentFnEntries={contractDescriptionsFetcher.data}\n            />\n          </SmoothDisplayContainer>\n        ) : (\n          <ContractSelectorScreen\n            contracts={contracts}\n            loaderText=\"Fetching descriptions\u2026\"\n            onContractDataSelected={setSelectedContractData}\n          />\n        )}\n      </Container>\n    </AppScreen>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  height: 100%;\n  width: 100%;\n`;\n\n// https://remix.run/docs/en/v1/api/conventions#catchboundary\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  let message;\n\n  switch (caught.status) {\n    case 400:\n      message = caught.data;\n    case 500:\n      message = caught.data;\n      break;\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <div>\n      <div>\n        <h1>\n          {caught.status}: {caught.statusText}\n        </h1>\n        {message}\n      </div>\n    </div>\n  );\n}\n", "import type { ReactNode } from \"react\";\nimport { useEffect } from \"react\";\nimport { a } from \"react-spring\";\nimport { useOutletContext } from \"@remix-run/react\";\nimport styled from \"styled-components\";\nimport { useAppReady } from \"~/providers/AppReady\";\nimport type { AppContext } from \"~/App\";\n\ntype AppScreenProps = {\n  children: ReactNode;\n  hideBottomBar?: boolean;\n  hideTopBar?: boolean;\n};\n\nexport const AppScreen = ({\n  children,\n  hideBottomBar = false,\n  hideTopBar = false,\n}: AppScreenProps) => {\n  const { appReadyTransition } = useAppReady();\n  const { displayBottomBar, displayTopBar } = useOutletContext<AppContext>();\n\n  useEffect(() => {\n    displayBottomBar(!hideBottomBar);\n\n    displayTopBar(!hideTopBar);\n  }, [hideBottomBar, hideTopBar, displayBottomBar, displayTopBar]);\n\n  return appReadyTransition(\n    ({ progress, screenTransform }, ready) =>\n      ready && (\n        <AnimatedContainer\n          style={{ opacity: progress, transform: screenTransform }}\n        >\n          <InnerContainer>{children}</InnerContainer>\n        </AnimatedContainer>\n      )\n  );\n};\n\nconst AnimatedContainer = styled(a.div)`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nconst InnerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`;\n", "import { Button, GU, useViewport } from \"@1hive/1hive-ui\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport scrollIcon from \"./assets/scroll-icon.svg\";\nimport handIcon from \"./assets/hand-icon.svg\";\nimport { useDebounce } from \"~/hooks/useDebounce\";\nimport { Carousel } from \"./Carousel\";\nimport { FunctionDescriptor } from \"./FunctionDescriptor\";\nimport { Pagination } from \"./Pagination\";\nimport {\n  actions,\n  selectors,\n  useContractDescriptorStore,\n} from \"./use-contract-descriptor-store\";\nimport type { ContractData, FnEntry } from \"~/types\";\n\nconst FN_DESCRIPTOR_HEIGHT = \"527px\";\n\ntype ContractDescriptorScreenProps = {\n  contractData: ContractData;\n  currentFnEntries: FnEntry[];\n};\n\nexport const ContractDescriptorScreen = ({\n  contractData: { abi },\n  currentFnEntries,\n}: ContractDescriptorScreenProps) => {\n  const { below } = useViewport();\n  const { fnSelected, fnDescriptorEntries } = useContractDescriptorStore();\n  const compactMode = below(\"large\");\n  const fnDescriptionsCounter = selectors.fnDescriptionsCounter();\n  /**\n   * Debounce wheel event to avoid fast changing pages on scroll.\n   */\n  const [wheelEvent, setWheelEvent] = useState<WheelEvent | null>(null);\n  const debouncedWheelEvent = useDebounce<WheelEvent | null>(wheelEvent, 50);\n\n  useEffect(() => {\n    if (abi && currentFnEntries) {\n      actions.setUpFnDescriptorEntries(abi, currentFnEntries);\n    }\n  }, [abi, currentFnEntries]);\n\n  useEffect(() => {\n    if (debouncedWheelEvent) {\n      if (debouncedWheelEvent.deltaY < 0) {\n        actions.goToPrevFn();\n      } else {\n        actions.goToNextFn();\n      }\n    }\n  }, [debouncedWheelEvent]);\n\n  useEffect(() => {\n    const onWheel = (e: WheelEvent) => {\n      setWheelEvent(e);\n    };\n\n    window.addEventListener(\"wheel\", onWheel);\n\n    return () => {\n      window.removeEventListener(\"wheel\", onWheel);\n    };\n  }, []);\n\n  return (\n    <Layout compactMode={compactMode}>\n      <FiltersContainer>FILTERS</FiltersContainer>\n      {fnDescriptorEntries.length > 1 && (\n        <PaginationContainer>\n          <Pagination\n            direction={compactMode ? \"horizontal\" : \"vertical\"}\n            pages={fnDescriptorEntries.length}\n            selected={fnSelected}\n            size={(compactMode ? 3 : 4) * GU}\n            onChange={actions.fnSelected}\n            touchMode={compactMode}\n          />\n          <PaginationIcon\n            size={compactMode ? 34 : 45}\n            src={compactMode ? handIcon : scrollIcon}\n            alt=\"\"\n          />\n        </PaginationContainer>\n      )}\n      <CarouselContainer>\n        <Carousel\n          selected={fnSelected}\n          items={fnDescriptorEntries.map((f) => (\n            <FunctionDescriptor\n              key={f.sigHash}\n              fnDescriptorEntry={f}\n              onEntryChange={actions.upsertFnDescription}\n            />\n          ))}\n          direction={compactMode ? \"horizontal\" : \"vertical\"}\n          itemSpacing={450}\n        />\n      </CarouselContainer>\n      <SubmitContainer>\n        <SubmitButton label={`Submit  (${fnDescriptionsCounter})`} wide />\n      </SubmitContainer>\n    </Layout>\n  );\n};\n\nconst Layout = styled.div<{ compactMode: boolean }>`\n  display: grid;\n  height: 100%;\n  width: 100%;\n  padding: ${4 * GU}px;\n  grid-gap: ${1 * GU}px;\n\n  ${({ compactMode }) => `\n    ${FiltersContainer} {\n      grid-area: filters;\n    }\n\n    ${PaginationContainer} {\n      grid-area: pagination;\n      ${\n        compactMode\n          ? `\n          flex-direction: column-reverse;\n          `\n          : `\n          justify-self: start;\n          `\n      }\n    }\n\n    ${CarouselContainer} {\n      grid-area: carousel;\n    }\n\n    ${SubmitContainer} {\n      grid-area: submit;\n      ${\n        compactMode\n          ? `\n        width: 100%;\n      `\n          : `\n        width: 230px;\n      `\n      };\n      place-self: end;\n\n    }\n   ${\n     compactMode\n       ? `grid: \n      [row1-start] \"filters\" 1fr [row1-end]\n      [row2-start] \"carousel\" 5fr [row2-end]\n      [row3-start] \"pagination\" 1fr [row3-end]\n      [row4-start] \"submit\" 1fr [row4-end]\n      / minmax(200px,${FN_DESCRIPTOR_HEIGHT});\n\n      justify-content: center;\n    `\n       : `grid: \n      [row1-start] \". filters .\" 1fr [row1-end]\n      [row2-start] \"pagination carousel .\" 8fr [row2-end]\n      [row3-start] \". . submit\" 1fr [row3-end]\n      / 1fr minmax(200px,527px) 1fr;\n    `\n   }\n  `};\n`;\n\nconst FiltersContainer = styled.div`\n  justify-self: center;\n`;\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${1 * GU}px;\n`;\n\nconst PaginationIcon = styled.img<{ size: number }>`\n  ${({ size }) => `width: ${size}px; height: ${size}px;`};\n`;\n\nconst CarouselContainer = styled.div`\n  min-width: 100%;\n  height: 100%;\n`;\n\nconst SubmitContainer = styled.div``;\n\nconst SubmitButton = styled(Button)`\n  box-sizing: border-box;\n  padding: ${3 * GU}px;\n  ${({ wide }) => wide && \"width: 100%;\"};\n`;\n", "import { useEffect, useState } from \"react\";\n\n/**\n * Source: https://usehooks.com/useDebounce/\n */\nexport function useDebounce<T>(value: T, delay: number): T {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n  return debouncedValue;\n}\n", "import { GU, useViewport } from \"@1hive/1hive-ui\";\nimport type { ReactNode } from \"react\";\nimport { useCallback, useEffect, useState, useRef } from \"react\";\nimport { a, useSpring } from \"react-spring\";\nimport styled from \"styled-components\";\nimport { PrevNext } from \"./PrevNext\";\n\ntype CarouselProps = {\n  items: ReactNode[];\n  selected: number;\n  compactMode?: boolean;\n  direction?: \"horizontal\" | \"vertical\";\n  itemSpacing?: number;\n  customSideSpace?: number;\n  showPrevNext?: boolean;\n  onItemSelected?(selected: number): void;\n};\n\nconst DEFAULT_SIZE = { width: 0, height: 0 };\n\nexport const Carousel = ({\n  items,\n  selected = 0,\n  compactMode = false,\n  direction = \"vertical\",\n  itemSpacing = 3 * GU,\n  customSideSpace,\n  showPrevNext = false,\n  onItemSelected = () => {},\n}: CarouselProps) => {\n  const [containerSize, setContainerSize] = useState({ ...DEFAULT_SIZE });\n  const container = useRef(null);\n  const { width: vw } = useViewport();\n  const isHorizontal = direction === \"horizontal\";\n  const itemSize = containerSize[isHorizontal ? \"width\" : \"height\"];\n  // The space on one side of the visible items\n  const sideSpace =\n    customSideSpace && customSideSpace >= 0 ? customSideSpace : 0;\n\n  // const allowDrag = compactMode || (items && items.length > visibleItems);\n\n  useEffect(() => {\n    onItemSelected(selected);\n  }, [onItemSelected, selected]);\n\n  const updateContainerSize = useCallback((element) => {\n    setContainerSize(\n      element\n        ? { width: element.clientWidth, height: element.clientHeight }\n        : { ...DEFAULT_SIZE }\n    );\n  }, []);\n\n  useEffect(() => {\n    if (container.current) {\n      updateContainerSize(container.current);\n    }\n  }, [vw, updateContainerSize]);\n\n  const handleContainerRef = useCallback(\n    (element) => {\n      container.current = element;\n      updateContainerSize(element);\n    },\n    [updateContainerSize]\n  );\n\n  // Get the container x position from an item index\n  const xFromItem = useCallback(\n    (index) => {\n      return sideSpace - (itemSize + itemSpacing) * index;\n    },\n    [sideSpace, itemSize, itemSpacing]\n  );\n\n  // The current x position, before the drag\n  const selectedX = xFromItem(selected);\n\n  // The x position of the last item, before the drag\n  // const lastX = xFromItem(items.length - 1);\n\n  // Handles the actual x position, with the drag\n  const [{ x, drag }, setX] = useSpring(() => ({\n    x: selectedX,\n    drag: Number(false),\n    immediate: true,\n  }));\n\n  // TODO: Implement dragging feature for mobile screens\n  // Update the transition during drag\n  // const bindDrag = useDrag(({ down, delta }) => {\n  //   const updatedX = Math.max(lastX, Math.min(sideSpace, selectedX + delta[0]));\n\n  //   if (!allowDrag) {\n  //     return;\n  //   }\n\n  //   if (down) {\n  //     setX({\n  //       x: updatedX,\n  //       immediate: true,\n  //     });\n  //   } else {\n  //     let target = selected;\n  //     if (Math.abs(delta[0]) > itemWidth / 2) {\n  //       const sP = delta[0] > 0 ? -sideSpace : sideSpace;\n  //       const deltaSelected = Math.abs(\n  //         Math.round((delta[0] + sP) / (itemWidth + itemSpacing))\n  //       );\n  //       // Moving to the left\n  //       if (delta[0] > 0) {\n  //         target = Math.max(0, selected - deltaSelected);\n  //         // Move to the right\n  //       } else {\n  //         target = Math.min(\n  //           items.length - visibleItems,\n  //           selected + deltaSelected\n  //         );\n  //       }\n  //     }\n\n  //     setX({\n  //       x: xFromItem(target),\n  //       immediate: false,\n  //     });\n  //     setSelected(target);\n  //   }\n  // });\n\n  // Update the transition when the base x position updates\n  useEffect(() => {\n    setX({\n      x: selectedX,\n      immediate: false,\n    });\n  }, [selectedX, setX]);\n\n  return (\n    <Container ref={handleContainerRef} isHorizontal={isHorizontal}>\n      {showPrevNext && (\n        <>\n          {selected > 0 && (\n            <PrevNext\n              type=\"previous\"\n              onClick={() => onItemSelected(Math.max(0, selected - 1))}\n              isHorizontal={isHorizontal}\n            />\n          )}\n          {selected < items.length - 1 && (\n            <PrevNext\n              type=\"next\"\n              onClick={() =>\n                onItemSelected(Math.min(items.length - 1, selected + 1))\n              }\n              isHorizontal={isHorizontal}\n            />\n          )}\n        </>\n      )}\n\n      <AnimatedContainer\n        // {...bindDrag()}\n        /**\n         * Use transient props as for some reason setting camel case\n         * props on styled animated components triggers a react warning\n         */\n        $isHorizontal={isHorizontal}\n        style={{\n          transform: x.to(\n            (x) =>\n              `translate3d(${\n                isHorizontal ? `${x || 0}px, 0, 0` : `0, ${x || 0}px, 0`\n              })`\n          ),\n        }}\n      >\n        {items.map((item, i) => (\n          <AnimatedItemContainer\n            key={i}\n            style={{\n              opacity: drag.to((drag) => {\n                return drag || (i >= selected && i < selected + 1) ? 1 : 0.15;\n              }),\n            }}\n            $isFirst={i === 0}\n            $isHorizontal={isHorizontal}\n            $itemHeight={containerSize.height}\n            $itemWidth={containerSize.width}\n            $itemSpacing={itemSpacing}\n          >\n            {item}\n          </AnimatedItemContainer>\n        ))}\n      </AnimatedContainer>\n    </Container>\n  );\n};\n\nconst Container = styled.div<{\n  isHorizontal: boolean;\n}>`\n  position: relative;\n  overflow: hidden;\n  touch-action: none;\n  height: 100%;\n  width: 100%;\n`;\n\nconst AnimatedContainer = styled(a.div)<{ $isHorizontal: boolean }>`\n  position: absolute;\n  display: flex;\n  width: 100%;\n  box-sizing: border-box;\n\n  align-items: center;\n  touch-action: none;\n  ${(props) =>\n    props.$isHorizontal\n      ? `\n        flex-direction: row;\n        justify-content: flex-start;\n        height: 100%;\n      `\n      : `\n        flex-direction: column;\n        justify-content: center;\n      `};\n`;\n\nconst AnimatedItemContainer = styled(a.div)<{\n  $isHorizontal: boolean;\n  $isFirst: boolean;\n  $itemWidth: number;\n  $itemHeight: number;\n  $itemSpacing: number;\n}>`\n  width: ${(props) => props.$itemWidth}px;\n  height: ${(props) => props.$itemHeight}px;\n  transition: opacity 150ms ease-in-out;\n  flex-grow: 0;\n  flex-shrink: 0;\n  ${(props) => (props.$isHorizontal ? \"margin-left\" : \"margin-top\")}: ${({\n  $isFirst,\n  $itemSpacing: itemSpacing,\n}) => (!$isFirst ? `${itemSpacing}px` : 0)}};\n`;\n", "import {\n  GU,\n  ButtonIcon,\n  IconDown,\n  IconUp,\n  IconRight,\n  IconLeft,\n} from \"@1hive/1hive-ui\";\nimport styled from \"styled-components\";\n\ntype PrevNextProps = {\n  isHorizontal?: boolean;\n  type: \"next\" | \"previous\";\n  onClick: () => void;\n};\nexport const PrevNext = ({\n  isHorizontal = true,\n  type,\n  onClick,\n}: PrevNextProps) => {\n  const NextIcon = isHorizontal ? IconRight : IconDown;\n  const PrevIcon = isHorizontal ? IconLeft : IconUp;\n  const next = type === \"next\";\n  const Icon = next ? NextIcon : PrevIcon;\n\n  return (\n    <Container next={next} isHorizontal={isHorizontal}>\n      <ButtonIcon onClick={onClick} label={next ? \"Next\" : \"Previous\"}>\n        <Icon size=\"large\" />\n      </ButtonIcon>\n    </Container>\n  );\n};\n\nconst Container = styled.div<{ isHorizontal: boolean; next: boolean }>`\n  position: absolute;\n  z-index: 1;\n  ${({ isHorizontal, next }) =>\n    isHorizontal\n      ? `\n    top: calc(50% - ${5 * GU}px);\n    ${next ? \"right\" : \"left\"}: ${0.5 * GU}px;\n  `\n      : `\n    top: calc(${next ? `100% - ${5 * GU}px` : \"0\"});\n    left: 50%;\n  `};\n  color: ${({ theme }) => theme.surfaceContentSecondary};\n  height: ${6 * GU}px;\n`;\n", "import { Button, textStyle, GU } from \"@1hive/1hive-ui\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useDebounce } from \"~/hooks/useDebounce\";\nimport type { UserFnDescription } from \"~/types\";\nimport { FnDescriptionStatus } from \"~/types\";\nimport { getFnEntryStatusIconData } from \"~/utils/client/icons.client\";\nimport type { Function } from \"../use-contract-descriptor-store\";\nimport { DescriptionField } from \"./DescriptionField\";\n\ntype FunctionDescriptorProps = {\n  fnDescriptorEntry: Function;\n  onEntryChange(userFnDescription: UserFnDescription): void;\n  isCompleted?: boolean;\n};\n\nexport const FunctionDescriptor = ({\n  fnDescriptorEntry,\n  onEntryChange,\n}: FunctionDescriptorProps) => {\n  const entry = fnDescriptorEntry.entry;\n  const { notice, status } = entry || {};\n  const [description, setDescription] = useState<string>();\n  const debouncedDescription = useDebounce<string | undefined>(\n    description,\n    350\n  );\n  const descriptorStatus =\n    status ||\n    (debouncedDescription\n      ? FnDescriptionStatus.Added\n      : FnDescriptionStatus.Available);\n\n  useEffect(() => {\n    if (debouncedDescription !== undefined) {\n      onEntryChange({\n        sigHash: fnDescriptorEntry.sigHash,\n        minimalName: fnDescriptorEntry.minimalName,\n        description: debouncedDescription,\n      });\n    }\n  }, [\n    fnDescriptorEntry.sigHash,\n    fnDescriptorEntry.minimalName,\n    debouncedDescription,\n    onEntryChange,\n  ]);\n\n  return (\n    <Container>\n      <DescriptorHeader>\n        Description\n        <StatusLabel status={descriptorStatus} />\n      </DescriptorHeader>\n      <DescriptionField\n        height={`${23.5 * GU}px`}\n        value={notice || description}\n        onChange={(e) => setDescription(e.target.value)}\n        disabled={!!notice}\n      />\n      <div style={{ margin: `${2 * GU}px 0` }}>\n        {fnDescriptorEntry.fullName}\n      </div>\n      <Button\n        label=\"Test function\"\n        wide\n        onClick={() => {}}\n        disabled={!(notice || description)}\n      />\n    </Container>\n  );\n};\n\nconst StatusLabel = ({ status }: { status: FnDescriptionStatus }) => {\n  const iconData = getFnEntryStatusIconData(status);\n\n  if (!iconData) {\n    return null;\n  }\n\n  const { Icon, color } = iconData;\n\n  return (\n    <LabelContainer\n      color={color}\n      status={status}\n      visible={status !== FnDescriptionStatus.Available}\n    >\n      <div>\n        <Icon />\n      </div>\n      {status}\n    </LabelContainer>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DescriptorHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${1 * GU}px;\n`;\n\nconst LabelContainer = styled.div<{\n  status: FnDescriptionStatus;\n  visible: boolean;\n}>`\n  display: flex;\n  visibility: ${({ visible }) => (visible ? \"visible\" : \"hidden\")};\n  align-items: center;\n  height: 24px;\n  border: 1px solid ${({ color }) => color};\n  width: fit-content;\n  text-transform: lowercase;\n  border-radius: 4px;\n  padding-right: ${1 * GU}px;\n  ${textStyle(\"body4\")};\n\n  div:first-child {\n    display: flex;\n    height: 100%;\n    align-items: center;\n    color: ${({ theme }) => theme.content};\n    background-color: ${({ color }) => color};\n    margin-right: ${1 * GU}px;\n  }\n`;\n", "import { GU, RADIUS, textStyle } from \"@1hive/1hive-ui\";\nimport type { ChangeEventHandler, FocusEventHandler } from \"react\";\nimport styled from \"styled-components\";\n\ntype DescriptionFieldProps = {\n  value?: string;\n  disabled?: boolean;\n  height?: string;\n  placeholder?: string;\n  textSize?: string;\n  onBlur?: FocusEventHandler;\n  onChange?: ChangeEventHandler<HTMLTextAreaElement>;\n};\n\nexport const DescriptionField = ({\n  value,\n  disabled = false,\n  height = `${10 * GU}px`,\n  textSize = \"body2\",\n  placeholder = \"Add description\u2026\",\n  onBlur,\n  onChange,\n}: DescriptionFieldProps) => (\n  <DescriptionTextArea\n    height={height}\n    textSize={textSize}\n    value={value}\n    placeholder={placeholder}\n    onBlur={onBlur}\n    onChange={onChange}\n    disabled={disabled}\n  />\n);\n\nconst DescriptionTextArea = styled.textarea<{\n  height: string;\n  textSize: string;\n}>`\n  height: ${(props) => props.height};\n  padding: ${1 * GU}px ${1.5 * GU}px;\n  background: ${(props) => props.theme.surfaceUnder};\n  color: ${(props) => props.theme.surfaceContent};\n  appearance: none;\n  border-radius: ${RADIUS}px;\n  width: 100%;\n  outline: none;\n  resize: none;\n  ${(props) => textStyle(props.textSize)};\n\n  &:focus {\n    outline: none;\n    border-color: ${(props) => props.theme.selected};\n  }\n  &:read-only {\n    color: ${(props) => props.theme.hint};\n    border-color: ${(props) => props.theme.border};\n  }\n  &::placeholder {\n    color: ${(props) => props.theme.hint};\n    opacity: 0.5;\n  }\n  &:invalid {\n    box-shadow: none;\n  }\n\n  &::-webkit-scrollbar {\n    width: 12px;\n    background-color: ${(props) => props.theme.surfaceSelected};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);\n    background-color: ${(props) => props.theme.surfaceIcon};\n  }\n`;\n", "import { GU } from \"@1hive/1hive-ui\";\nimport styled from \"styled-components\";\nimport { PaginationItem } from \"./PaginationItem\";\nimport { PaginationSeparator } from \"./PaginationSeparator\";\n\nfunction paginationItems(\n  pages: number,\n  selected: number,\n  inbetweenRange: number\n): number[] {\n  // visibleItems + first and final item + ellipses\n  const totalVisibleItems = inbetweenRange + 2 + 2;\n  const all = [...Array(pages)].map((_, i) => i);\n  /**\n   * When having odd lengths use the previous number to get\n   * an even distribution amount of visible items on both sides of the\n   * selected number.\n   */\n  const normalizedLength =\n    inbetweenRange % 2 === 0 ? inbetweenRange : inbetweenRange - 1;\n\n  if (all.length <= totalVisibleItems) {\n    return all;\n  }\n\n  const first = 0;\n  const last = all.length - 1;\n  const amountBySide = Math.floor(inbetweenRange / 2);\n  const itemsToLast = last - selected;\n  const prevSize =\n    Math.min(amountBySide, Math.max(0, selected - first)) +\n    /**\n     * Add the missing items on one side or the other to keep\n     * the visible items length at all times.\n     */\n    (itemsToLast < amountBySide ? amountBySide - itemsToLast : 0);\n  const nextSize = normalizedLength - prevSize;\n\n  let lowerPrevBound = Math.min(all.length, selected - prevSize);\n  let upperNextBound = Math.min(all.length, selected + nextSize);\n\n  const items = [];\n\n  items.push(...all.slice(lowerPrevBound, upperNextBound + 1));\n\n  // Add ellipses\n  let leftEllipsisAdded = false,\n    rightEllipsisAdded = false;\n\n  if (lowerPrevBound > first + 1) {\n    items.unshift(-1);\n    leftEllipsisAdded = true;\n  }\n  if (upperNextBound < last - 1) {\n    items.push(-1);\n    rightEllipsisAdded = true;\n  }\n\n  // Always display the first & last items\n  if (lowerPrevBound >= first + 1) {\n    items.unshift(all[0]);\n  }\n  if (upperNextBound <= last - 1) {\n    items.push(all[all.length - 1]);\n  }\n\n  const missingItems = totalVisibleItems - items.length;\n\n  /**\n   * To keep a constant pagination size we always add enough items\n   * to reach the total total amount of visible items.\n   * We add them on the left or right side of the selected item based on\n   * where we put the ellipsis.\n   */\n  if (missingItems > 0 && !(leftEllipsisAdded && rightEllipsisAdded)) {\n    if (leftEllipsisAdded) {\n      items.splice(\n        2,\n        0,\n        ...all.slice(lowerPrevBound - missingItems, lowerPrevBound)\n      );\n    } else {\n      items.splice(\n        items.length - 2,\n        0,\n        ...all.slice(upperNextBound + 1, upperNextBound + missingItems + 1)\n      );\n    }\n  }\n\n  return items;\n}\n\ntype PaginationProps = {\n  direction?: \"horizontal\" | \"vertical\";\n  pages: number;\n  // Length of elements between ellipses.\n  inbetweenRange?: number;\n  selected: number;\n  size: number;\n  touchMode?: boolean;\n  onChange(index: number): void;\n};\n\nexport const Pagination = ({\n  direction = \"horizontal\",\n  pages,\n  inbetweenRange = 9,\n  selected,\n  size,\n  touchMode = false,\n  onChange,\n}: PaginationProps) => {\n  const items = paginationItems(pages, selected, inbetweenRange);\n  const isHorizontal = direction === \"horizontal\";\n\n  return (\n    <Container isHorizontal={isHorizontal} touchMode={touchMode}>\n      {items.map((pageIndex, i) =>\n        pageIndex === -1 ? (\n          <PaginationSeparator\n            isHorizontal={isHorizontal}\n            key={`separator-${i}`}\n            size={size}\n          />\n        ) : (\n          <PaginationItem\n            key={pageIndex}\n            direction={direction}\n            index={pageIndex}\n            selected={selected === pageIndex}\n            onChange={onChange}\n            touchMode={touchMode}\n            size={size}\n          />\n        )\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.div<{ isHorizontal: boolean; touchMode: boolean }>`\n  display: flex;\n  flex-direction: ${({ isHorizontal }) => (isHorizontal ? \"row\" : \"column\")};\n  gap: ${({ touchMode }) => (touchMode ? 0 : `${2 * GU}px`)};\n`;\n", "import { ButtonBase, RADIUS, textStyle } from \"@1hive/1hive-ui\";\nimport { useCallback } from \"react\";\nimport styled from \"styled-components\";\n\ntype Direction = \"horizontal\" | \"vertical\";\n\ntype PaginationItemProps = {\n  direction?: Direction;\n  index: number;\n  selected: boolean;\n  size: number;\n  touchMode: boolean;\n  onChange(index: number): void;\n};\n\nexport const PaginationItem = ({\n  direction = \"horizontal\",\n  touchMode,\n  selected,\n  size,\n  index,\n  onChange,\n}: PaginationItemProps) => {\n  const handleClick = useCallback(() => {\n    onChange(index);\n  }, [index, onChange]);\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      {selected && <Dot direction={direction} />}\n      <StyledButtonBase\n        onClick={handleClick}\n        focusRingRadius={RADIUS}\n        disabled={selected}\n        touchMode={touchMode}\n        selected={selected}\n        size={size}\n      >\n        <span>{index + 1}</span>\n      </StyledButtonBase>\n    </div>\n  );\n};\n\nconst Dot = styled.div<{ direction: Direction }>`\n  width: 3px;\n  height: 3px;\n  position: absolute;\n  ${({ direction }) =>\n    direction === \"horizontal\"\n      ? `\n      bottom: calc(-20%);\n      left: calc(50% - 2px);\n  `\n      : `\n      top: calc(50% - 1px);\n      left: calc(-10%);\n  `};\n  background: ${({ theme }) => theme.accentContent};\n`;\n\nconst StyledButtonBase = styled(ButtonBase)<{\n  selected: boolean;\n  touchMode: boolean;\n}>`\n  border-radius: ${RADIUS}px;\n  ${({ selected, theme, touchMode, size }) => `\n    width: ${size}px;\n    height: ${size}px;\n    color: ${theme.surfaceContent};\n    ${textStyle(touchMode ? \"body1\" : \"title2\")};\n\n    &:active {\n      background: ${theme.surfacePressed};\n    }\n    ${\n      selected &&\n      `\n        && {\n          color: ${theme.accentContent};\n        }\n      `\n    };\n  `}\n`;\n", "import { IconEllipsis } from \"@1hive/1hive-ui\";\nimport { memo } from \"react\";\nimport styled from \"styled-components\";\n\ntype PaginationSeparatorProps = {\n  isHorizontal?: boolean;\n  size: number;\n};\n\nexport const PaginationSeparator = memo(function PaginationSeparator({\n  isHorizontal = false,\n  size,\n}: PaginationSeparatorProps) {\n  return (\n    <Container isHorizontal={isHorizontal} size={size}>\n      <StyledIconEllipsis />\n    </Container>\n  );\n});\n\nconst Container = styled.div<{ isHorizontal: boolean; size: number }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${({ size }) => `\n    width: ${size}px;\n    height: ${size}px;\n  `};\n  transform: rotate(${({ isHorizontal }) => (isHorizontal ? 0 : \"90deg\")});\n`;\n\nconst StyledIconEllipsis = styled(IconEllipsis)`\n  color: ${({ theme }) => theme.surfaceContentSecondary.alpha(0.4)};\n`;\n", "import { createStore } from \"@udecode/zustood\";\nimport { utils } from \"ethers\";\nimport type { FunctionFragment } from \"ethers/lib/utils\";\nimport type { FnEntry, UserFnDescription } from \"~/types\";\nimport { getFnSelector } from \"~/utils\";\n\nexport type Function = {\n  fullName: string;\n  minimalName: string;\n  sigHash: string;\n  entry?: FnEntry;\n};\n\ntype ContractDescriptorState = {\n  fnSelected: number;\n  fnDescriptorEntries: Function[];\n  /**\n   * Use an object to index descriptions to ease state updates at\n   * the expense of having some fn data duplication (sigHash, minimalName, etc)\n   */\n  userFnDescriptions: Record<string, UserFnDescription>;\n};\n\nconst initialState: ContractDescriptorState = {\n  fnSelected: 0,\n  fnDescriptorEntries: [],\n  userFnDescriptions: {},\n};\n\nconst contractDescriptorStore = createStore(\"contract-descriptor\")(\n  initialState,\n  {\n    devtools: { enabled: process.env.NODE_ENV === \"development\" },\n  }\n)\n  .extendActions((set, get) => ({\n    setUpFnDescriptorEntries: (abi: string, entries: FnEntry[]) => {\n      const abiInterface = new utils.Interface(abi);\n      const fnFragments = abiInterface.fragments.filter(\n        (f) => f.type === \"function\"\n      ) as FunctionFragment[];\n\n      const fns = fnFragments\n        .filter((f) => !f.constant) // Only consider functions that does not change state\n        .map((f) => {\n          const sigHash = getFnSelector(f);\n          return {\n            fullName: f.format(\"full\"),\n            minimalName: f.format(\"minimal\"),\n            sigHash,\n            entry: entries.find((e) => e.sigHash === sigHash),\n          };\n        });\n\n      set.fnDescriptorEntries(fns);\n    },\n    goToNextFn: () => {\n      const prevFnSelected = get.fnSelected();\n      const fns = get.fnDescriptorEntries();\n\n      set.fnSelected(Math.min(fns.length - 1, prevFnSelected + 1));\n    },\n    goToPrevFn: () => {\n      const prevFnSelected = get.fnSelected();\n      set.fnSelected(Math.max(0, prevFnSelected - 1));\n    },\n    upsertFnDescription: (userFnDescription: UserFnDescription) => {\n      const { sigHash, description } = userFnDescription;\n      const prevUserFnDescriptions = get.userFnDescriptions();\n\n      if (prevUserFnDescriptions[sigHash]?.description === description) {\n        return;\n      }\n\n      if (!description && prevUserFnDescriptions.hasOwnProperty(sigHash)) {\n        const newUserFnDescriptions = { ...prevUserFnDescriptions };\n        delete newUserFnDescriptions[sigHash];\n\n        set.userFnDescriptions(newUserFnDescriptions);\n\n        return;\n      }\n\n      set.userFnDescriptions({\n        ...prevUserFnDescriptions,\n\n        [sigHash]: userFnDescription,\n      });\n    },\n  }))\n  .extendSelectors((_, get) => ({\n    fnDescriptionsCounter: () => Object.keys(get.userFnDescriptions()).length,\n  }));\n\nexport const useContractDescriptorStore = contractDescriptorStore.useStore;\nexport const selectors = contractDescriptorStore.use;\nexport const actions = contractDescriptorStore.set;\n", "import { utils } from \"ethers\";\nimport type { Fragment } from \"ethers/lib/utils\";\n\nexport const getFnSelector = (fragment: Fragment): string =>\n  utils.id(fragment.format(\"sighash\")).substring(0, 10);\n", "import { GU, textStyle } from \"@1hive/1hive-ui\";\nimport styled from \"styled-components\";\nimport { a, useTransition } from \"react-spring\";\nimport type { ContractData, AggregateContract } from \"~/types\";\nimport { ContractItem } from \"./ContractItem\";\n\ntype ContractSelectorScreenProps = {\n  contracts: AggregateContract[];\n  loaderText?: string;\n  onContractDataSelected(contractData: ContractData): void;\n};\n\nexport const ContractSelectorScreen = ({\n  contracts,\n  loaderText,\n  onContractDataSelected,\n}: ContractSelectorScreenProps) => {\n  const transition = useTransition(contracts, {\n    trail: 100 / contracts.length,\n    from: { opacity: 0, scale: 0 },\n    enter: { opacity: 1, scale: 1 },\n  });\n\n  return (\n    <Container>\n      <div>The following contracts have been found for the given address:</div>\n      {transition((styles, item) => (\n        <a.div style={styles}>\n          <ContractItem\n            contract={item}\n            loaderText={loaderText}\n            onClick={onContractDataSelected}\n          />\n        </a.div>\n      ))}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${2 * GU}px;\n  padding: ${1 * GU}px;\n  margin-top: ${15 * GU}px;\n  margin-bottom: ${3 * GU}px;\n\n  & > div:first-child {\n    ${textStyle(\"body1\")};\n    margin: 0 ${2 * GU}px;\n    margin-bottom: ${3 * GU}px;\n  }\n`;\n", "import { GU, LoadingRing, Switch, Tag, textStyle } from \"@1hive/1hive-ui\";\nimport type { MouseEventHandler } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { a, useTransition } from \"react-spring\";\nimport styled from \"styled-components\";\nimport type { ContractData, AggregateContract } from \"~/types\";\nimport { getNetworkLogo } from \"~/utils/client/icons.client\";\n\ntype ContractItemProps = {\n  contract: AggregateContract;\n  loaderText?: string;\n  onClick(contractData: ContractData): void;\n};\n\nexport const ContractItem = ({\n  contract: { proxy, implementation },\n  loaderText = \"Fetching data\u2026\",\n  onClick,\n}: ContractItemProps) => {\n  const [itemClicked, setItemClicked] = useState(false);\n  const [displayProxy, setDisplayProxy] = useState(!implementation);\n  const contractData = displayProxy ? proxy : implementation;\n  const { address, name, network } = contractData!;\n  const implementationFound = !!implementation;\n  const displaySwitch = !!proxy && !!implementation;\n\n  const clickTransition = useTransition(itemClicked, {\n    from: {\n      loaderOpacity: 0,\n    },\n    enter: {\n      loaderOpacity: 1,\n    },\n  });\n\n  useEffect(() => {\n    if (!itemClicked || !contractData) {\n      return;\n    }\n\n    /**\n     * Wait a little bit before handling click to display loader\n     * for a period of time.\n     */\n    let timeoutId = setTimeout(() => onClick(contractData), 500);\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [contractData, itemClicked, onClick]);\n\n  const handleViewClick: MouseEventHandler<HTMLDivElement> = (e) => {\n    e.stopPropagation();\n\n    setDisplayProxy((prev) => !prev);\n  };\n\n  return (\n    <Wrapper\n      onClick={() => {\n        setItemClicked(true);\n      }}\n      isClicked={itemClicked}\n    >\n      {clickTransition(({ loaderOpacity }, clicked) => (\n        <>\n          <a.div style={{ opacity: clicked ? 0.1 : 1 }}>\n            <ItemHeader>\n              <Tag\n                mode=\"indicator\"\n                size=\"normal\"\n                label={network.name}\n                icon={\n                  <NetworkImg\n                    src={getNetworkLogo(network.id)}\n                    isTestnet={!!network.testnet}\n                  />\n                }\n              />\n              {displaySwitch && (\n                <>\n                  <ProxySwitchWrapper>\n                    Show proxy:{\" \"}\n                    <div onClick={handleViewClick}>\n                      <Switch checked={displayProxy} />\n                    </div>\n                  </ProxySwitchWrapper>\n                </>\n              )}\n            </ItemHeader>\n            <ItemContent>\n              <div>{name}</div>\n              <div>{address}</div>\n            </ItemContent>\n            {!implementationFound && (\n              <InfoError>*Implementation source code not found.</InfoError>\n            )}\n          </a.div>\n          {clicked && (\n            <Loader style={{ opacity: loaderOpacity }}>\n              <LoadingRing mode=\"half-circle\" /> <span>{loaderText}</span>\n            </Loader>\n          )}\n        </>\n      ))}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div<{ isClicked: boolean }>`\n  position: relative;\n  padding: ${2 * GU}px;\n  background-color: ${({ theme }) => theme.surface};\n  border-radius: 10px;\n  transition: background-color ease-out 200ms;\n  min-width: 45vmin;\n  max-width: 85vmin;\n  cursor: pointer;\n\n  ${({ isClicked, theme }) =>\n    !isClicked\n      ? `&:hover {\n    background-color: ${theme.surfaceHighlight};\n  }`\n      : \"\"};\n`;\n\nconst ItemHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${1.5 * GU}px;\n`;\n\nconst ItemContent = styled.div`\n  & > div:nth-child(1) {\n    ${textStyle(\"body1\")};\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  & > div:nth-child(2) {\n    ${textStyle(\"body3\")};\n    color: ${({ theme }) => theme.contentSecondary};\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst InfoError = styled.span`\n  color: ${({ theme }) => theme.negative};\n  margin-top: ${1 * GU}px;\n  ${textStyle(\"body4\")};\n`;\n\nconst ProxySwitchWrapper = styled.div`\n  display: flex;\n  gap: ${0.5 * GU}px;\n  ${({ theme }) => theme.contentSecondary};\n  ${textStyle(\"body3\")};\n\n  & > div {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nconst Loader = styled(a.div)`\n  width: 100%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: nowrap;\n  gap: ${1 * GU}px;\n  ${textStyle(\"body3\")};\n`;\n\nconst NetworkImg = styled.img<{ isTestnet: boolean }>`\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  margin-left: -${1.2 * GU}px;\n  margin-right: ${0.5 * GU}px;\n  ${(props) => (props.isTestnet ? \"filter: grayscale(80%);\" : \"\")};\n`;\n", "import type { ReactNode } from \"react\";\nimport { a, useSpring } from \"react-spring\";\n\nexport const SmoothDisplayContainer = ({\n  children,\n}: {\n  children: ReactNode;\n}) => {\n  const smoothDisplayStyles = useSpring({\n    from: { opacity: 0 },\n    to: { opacity: 1 },\n  });\n\n  return (\n    <a.div style={{ ...smoothDisplayStyles, width: \"100%\", height: \"100%\" }}>\n      {children}\n    </a.div>\n  );\n};\n", "import type { ContractData, AggregateContract } from \"~/types\";\nimport { getProvider, NETWORKS } from \"./web3.server\";\nimport {\n  buildExplorerFetchRequest,\n  processExplorerResponse,\n} from \"./blockchain-explorers.server\";\nimport {\n  fetchImplementationAddress,\n  getProxyPattern,\n} from \"./proxy-patterns.server\";\nimport { constants } from \"ethers\";\nimport type { Chain } from \"wagmi\";\n\nconst processBytecodeRequest = (response: any): string => {\n  const bytecode = response as string;\n\n  if (!bytecode || bytecode === \"0x\") {\n    throw new Response(\n      !bytecode\n        ? \"Contract bytecode not found\"\n        : \"Address provided is not a contract\",\n      { status: 500 }\n    );\n  }\n\n  return bytecode;\n};\n\nexport const fetchContracts = async (\n  contractAddress: string\n): Promise<AggregateContract[]> => {\n  const responses = (await Promise.allSettled(\n    NETWORKS.map((n) => fetchContractData(contractAddress, n))\n  )) as PromiseSettledResult<ContractData>[];\n\n  const fulfilledResponses = responses.filter(\n    (r) => r.status === \"fulfilled\"\n  ) as PromiseFulfilledResult<ContractData>[];\n  const contracts = fulfilledResponses.map((r) => r.value);\n  const proxiesAndImplementations = [];\n\n  // Fetch proxy's implementation contract.\n  for (const c of contracts) {\n    let proxy, implementation;\n    const proxyPattern = getProxyPattern(c.name);\n\n    if (proxyPattern !== undefined) {\n      proxy = c;\n      const implementationAddress = await fetchImplementationAddress(\n        proxy,\n        proxyPattern\n      );\n      if (implementationAddress !== constants.AddressZero) {\n        try {\n          implementation = await fetchContractData(\n            implementationAddress,\n            c.network\n          );\n        } catch (err) {}\n      }\n    } else {\n      implementation = c;\n    }\n\n    proxiesAndImplementations.push({ proxy, implementation });\n  }\n\n  return proxiesAndImplementations;\n};\n\nexport const fetchContractData = async (\n  contractAddress: string,\n  network: Chain\n): Promise<ContractData> => {\n  const networkId = network.id;\n  const provider = getProvider(networkId);\n  const explorerRequest = fetch(\n    buildExplorerFetchRequest(contractAddress, networkId)\n  );\n\n  const requests = [provider.getCode(contractAddress), explorerRequest];\n  const responses = await Promise.all(requests);\n\n  const bytecode = processBytecodeRequest(responses[0]);\n  const explorerResult = await processExplorerResponse(\n    responses[1] as Response\n  );\n\n  return {\n    abi: explorerResult.ABI,\n    bytecode,\n    address: contractAddress,\n    name: explorerResult.ContractName,\n    network,\n  };\n};\n", "import { providers } from \"ethers\";\nimport type { Chain } from \"wagmi\";\nimport { allChains } from \"wagmi\";\n\nconst INFURA_PROJECT_ID = process.env.INFURA_PROJECT_ID;\n\nconst STATIC_PROVIDERS_CACHE = new Map<\n  number,\n  providers.StaticJsonRpcProvider\n>();\n\nconst networkExplorerRegex = /([A-Z]+)_EXPLORER_API_KEY/;\n\nconst availableExplorers = Object.keys(process.env)\n  .filter((key) => networkExplorerRegex.test(key))\n  .map((key) => key.split(\"_\")[0].toLowerCase());\n\nexport const NETWORKS = allChains.filter(\n  (chain) =>\n    // Check if chain has the same explorer\n    !!chain.blockExplorers?.find(({ name }) =>\n      availableExplorers.includes(name.toLowerCase())\n    )\n);\n\nconst buildRpcEndpoint = (network: Chain): string => {\n  const infuraRpcEndpoints = network.rpcUrls.filter((rpcUrl) =>\n    rpcUrl.includes(\"infura\")\n  );\n\n  if (infuraRpcEndpoints.length) {\n    return `${infuraRpcEndpoints[0]}/${INFURA_PROJECT_ID}`;\n  }\n\n  return network.rpcUrls[0];\n};\n\nexport const getProvider = (networkId: number): providers.Provider => {\n  if (STATIC_PROVIDERS_CACHE.has(networkId)) {\n    return STATIC_PROVIDERS_CACHE.get(networkId)!;\n  }\n\n  const network = NETWORKS.find((n) => n.id === networkId)!;\n\n  const provider = new providers.StaticJsonRpcProvider(\n    buildRpcEndpoint(network),\n    networkId\n  );\n\n  STATIC_PROVIDERS_CACHE.set(networkId, provider);\n\n  return provider;\n};\n", "export type ExplorerAPIData = {\n  baseUrl: string;\n  apiKey: string;\n};\n\nexport type ExplorerResult = {\n  ABI: string;\n  Address: string;\n  ContractName: string;\n};\n\ntype ExplorerResponse = {\n  message: string;\n  result: ExplorerResult[];\n  status: string;\n};\n\nexport const getExplorerAPIData = (networkId: number): ExplorerAPIData => {\n  let apiKey, baseUrl;\n\n  switch (networkId) {\n    case 1:\n      apiKey = process.env.ETHERSCAN_EXPLORER_API_KEY;\n      baseUrl = \"https://api.etherscan.io/api\";\n      break;\n    case 4:\n      apiKey = process.env.ETHERSCAN_EXPLORER_API_KEY;\n      baseUrl = \"https://api-rinkeby.etherscan.io/api\";\n      break;\n    case 100:\n      apiKey = \"\";\n      baseUrl = \"https://blockscout.com/xdai/mainnet/api\";\n      break;\n    case 137:\n      apiKey = process.env.POLYGONSCAN_EXPLORER_API_KEY;\n      baseUrl = \"https://api.polygonscan.com/api\";\n      break;\n    case 80001:\n      apiKey = process.env.POLYGONSCAN_EXPLORER_API_KEY;\n      baseUrl = \"https://api-testnet.polygonscan.com/api\";\n      break;\n  }\n\n  if (!apiKey || !baseUrl) {\n    throw new Response(\n      `Blockchain explorer not found for given chain ${networkId}`,\n      {\n        status: 500,\n      }\n    );\n  }\n\n  return {\n    baseUrl,\n    apiKey,\n  };\n};\n\nexport const processExplorerResponse = async (\n  response: Response\n): Promise<ExplorerResult> => {\n  const explorerResponse = (await response.json()) as ExplorerResponse;\n\n  if (explorerResponse.status === \"0\") {\n    throw new Response(explorerResponse.message, { status: 500 });\n  }\n\n  const result = explorerResponse.result[0];\n\n  if (\n    !result.ABI ||\n    // Check ABI field as Blockscout sets it when contract is not verified\n    result.ABI === \"Contract source code not verified\"\n  ) {\n    throw new Response(`Contract is not verified`, { status: 500 });\n  }\n\n  return result;\n};\n\nexport const buildExplorerFetchRequest = (\n  contractAddress: string,\n  networkId: number\n): string => {\n  const { baseUrl, apiKey } = getExplorerAPIData(networkId);\n\n  return `${baseUrl}?module=contract&action=getsourcecode&address=${contractAddress}${\n    apiKey ? `&apikey=${apiKey}` : \"\"\n  }`;\n};\n", "import type { providers } from \"ethers\";\nimport { BigNumber, constants, Contract, utils } from \"ethers\";\nimport type { ContractData } from \"~/types\";\nimport { getProvider } from \"./web3.server\";\n\nenum ProxyPattern {\n  UUPSProxy,\n  UpgradeabilityStorage,\n  EternalStorage,\n  TransparentUpgradeableProxy,\n  AppProxyUpgradeable,\n  UnknownProxy,\n}\n\ntype ProxyPatternHandler = (\n  proxy: ContractData,\n  provider: providers.Provider\n) => Promise<string>;\n\nconst {\n  UUPSProxy,\n  UpgradeabilityStorage,\n  EternalStorage,\n  TransparentUpgradeableProxy,\n  AppProxyUpgradeable,\n  UnknownProxy,\n} = ProxyPattern;\n\n/**\n * Standarized storage slot determined by bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1)\n * and defined on EIP-1967 (https://eips.ethereum.org/EIPS/eip-1967#logic-contract-address)\n */\nconst EIP1967_STORAGE_SLOT = utils.hexlify(\n  BigNumber.from(utils.id(\"eip1967.proxy.implementation\")).sub(1)\n);\n\nconst getAddressFromStorageSlot = async (\n  contractAddress: string,\n  storageSlot: string | number,\n  provider: providers.Provider\n): Promise<string> => {\n  const rawImplementationAddress = await provider.getStorageAt(\n    contractAddress,\n    storageSlot\n  );\n  return utils.hexStripZeros(rawImplementationAddress);\n};\n\nconst PROXY_PATTERN_HANDLERS: Record<ProxyPattern, ProxyPatternHandler> = {\n  [UUPSProxy]: async ({ address }, provider) => {\n    let implementationAddress = await getAddressFromStorageSlot(\n      address,\n      EIP1967_STORAGE_SLOT,\n      provider\n    );\n\n    /**\n     * Try to fetch the address from the keccak256(\"PROXIABLE\") slot as defined on\n     * the EIP-1822 UUPS proposal (https://eips.ethereum.org/EIPS/eip-1822#proxiable-contract).\n     */\n    if (implementationAddress === constants.AddressZero) {\n      implementationAddress = await getAddressFromStorageSlot(\n        address,\n        utils.id(\"PROXIABLE\"),\n        provider\n      );\n      return implementationAddress;\n    }\n\n    return implementationAddress;\n  },\n  [UpgradeabilityStorage]: async (proxy, provider) => {\n    return \"\";\n  },\n  [EternalStorage]: async (proxy, provider) => {\n    return \"\";\n  },\n  [TransparentUpgradeableProxy]: async ({ address }, provider) => {\n    return getAddressFromStorageSlot(address, EIP1967_STORAGE_SLOT, provider);\n  },\n  [AppProxyUpgradeable]: ({ address, abi }, provider) => {\n    const proxyContract = new Contract(address, abi, provider);\n\n    return proxyContract.implementation();\n  },\n  [UnknownProxy]: async ({ address, abi }, provider) => {\n    let implementationAddress: string;\n\n    try {\n      const proxyContract = new Contract(address, abi, provider);\n      // Try fetching address from method\n      implementationAddress = await proxyContract.implementation();\n    } catch (err) {\n      implementationAddress = await getAddressFromStorageSlot(\n        address,\n        EIP1967_STORAGE_SLOT,\n        provider\n      );\n    }\n\n    return implementationAddress;\n  },\n};\n\nexport const getProxyPattern = (\n  contractName: string\n): ProxyPattern | undefined => {\n  const normalizedContractName = contractName.toLowerCase();\n  const proxyPatternKeys = Object.keys(ProxyPattern).map((k) =>\n    k.toLowerCase()\n  );\n  const proxyPatternIndex = proxyPatternKeys.indexOf(normalizedContractName);\n\n  if (proxyPatternIndex === -1) {\n    if (normalizedContractName.includes(\"proxy\")) {\n      return UnknownProxy;\n    }\n    return;\n  }\n\n  return Object.values(ProxyPattern)[\n    proxyPatternIndex\n  ] as unknown as ProxyPattern;\n};\n\nexport const fetchImplementationAddress = (\n  proxy: ContractData,\n  proxyPattern: ProxyPattern\n): Promise<string> =>\n  PROXY_PATTERN_HANDLERS[proxyPattern](proxy, getProvider(proxy.network.id));\n", "import { GU, useViewport } from \"@1hive/1hive-ui\";\nimport { Outlet } from \"@remix-run/react\";\nimport styled from \"styled-components\";\nimport { AppScreen } from \"~/components/AppLayout/AppScreen\";\n\nexport default function Home() {\n  const { below } = useViewport();\n\n  return (\n    <AppScreen>\n      <MainContainer compactMode={below(\"medium\")}>\n        <Outlet />\n      </MainContainer>\n    </AppScreen>\n  );\n}\n\nconst MainContainer = styled.div<{ compactMode: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding-top: ${({ compactMode }) => (compactMode ? 5 * GU : 17 * GU)}px;\n  width: 100%;\n  height: 100%;\n`;\n", "import { GU, useViewport } from \"@1hive/1hive-ui\";\nimport { useNavigate } from \"@remix-run/react\";\nimport styled from \"styled-components\";\nimport { AppScreen } from \"~/components/AppLayout/AppScreen\";\nimport { ContractForm } from \"~/components/ContractForm\";\n\nexport default function Home() {\n  const { below } = useViewport();\n  const navigate = useNavigate();\n\n  return (\n    <AppScreen>\n      <MainContainer compactMode={below(\"medium\")}>\n        <ContractForm\n          onSubmit={(contractAddress) =>\n            navigate(`/describe?contract=${contractAddress}`)\n          }\n        />\n      </MainContainer>\n    </AppScreen>\n  );\n}\n\nconst MainContainer = styled.div<{ compactMode: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding-top: ${({ compactMode }) => (compactMode ? 5 * GU : 17 * GU)}px;\n  width: 100%;\n  height: 100%;\n`;\n", "import {\n  Button,\n  Field,\n  GU,\n  Info,\n  LoadingRing,\n  TextInput,\n} from \"@1hive/1hive-ui\";\nimport { utils } from \"ethers\";\nimport type { ChangeEvent, FormEventHandler } from \"react\";\nimport { useState } from \"react\";\nimport { useTransition } from \"@remix-run/react\";\nimport styled from \"styled-components\";\n\ntype ContractFormProps = {\n  onSubmit(contractAddress: string): void;\n};\n\nexport const ContractForm = ({ onSubmit }: ContractFormProps) => {\n  const [contractAddress, setContractAddress] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const transition = useTransition();\n\n  const handleSubmit: FormEventHandler = (e) => {\n    e.preventDefault();\n\n    if (!contractAddress) {\n      setErrorMsg(\"Type in a contract address.\");\n      return;\n    }\n    if (!utils.isAddress(contractAddress)) {\n      setErrorMsg(\"Invalid contract address.\");\n      return;\n    }\n\n    onSubmit(contractAddress);\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            marginBottom: 3 * GU,\n          }}\n        >\n          <Field label=\"Contract address\">\n            <MainTextInput\n              value={contractAddress}\n              placeholder=\"0x\u2026\"\n              onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                setErrorMsg(\"\");\n                setContractAddress(e.target.value);\n              }}\n              wide\n            />\n          </Field>\n          {errorMsg && <Info mode=\"error\">{errorMsg}</Info>}\n        </div>\n        <NextButton\n          type=\"submit\"\n          mode=\"strong\"\n          disabled={transition.state === \"loading\"}\n          wide\n        >\n          {transition.state === \"loading\" ? (\n            <>\n              <LoadingRing style={{ marginRight: 1 * GU }} mode=\"half-circle\" />\n              Loading\u2026\n            </>\n          ) : (\n            <>Next</>\n          )}\n        </NextButton>\n      </form>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 440px;\n  margin: 0 ${3 * GU}px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst MainTextInput = styled(TextInput)`\n  height: ${8 * GU}px;\n`;\n\nconst NextButton = styled(Button)`\n  height: ${8 * GU}px;\n`;\n", "import { GU, useViewport } from \"@1hive/1hive-ui\";\nimport { useNavigate } from \"@remix-run/react\";\nimport styled from \"styled-components\";\nimport { AppScreen } from \"~/components/AppLayout/AppScreen\";\nimport { ContractForm } from \"~/components/ContractForm\";\n\nexport default function Home() {\n  const { below } = useViewport();\n  const navigate = useNavigate();\n\n  return (\n    <AppScreen>\n      <MainContainer compactMode={below(\"medium\")}>\n        <ContractForm\n          onSubmit={(contractAddress) =>\n            navigate(`/describe?contract=${contractAddress}`)\n          }\n        />\n      </MainContainer>\n    </AppScreen>\n  );\n}\n\nconst MainContainer = styled.div<{ compactMode: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding-top: ${({ compactMode }) => (compactMode ? 5 * GU : 17 * GU)}px;\n  width: 100%;\n  height: 100%;\n`;\n", "import { useEffect } from \"react\";\nimport { useNavigate } from \"@remix-run/react\";\n\nexport default function Index() {\n  const navigate = useNavigate();\n\n  useEffect(() => navigate(\"/home\"), [navigate]);\n\n  return null;\n}\n", "import { GU, useViewport } from \"@1hive/1hive-ui\";\nimport { useNavigate } from \"@remix-run/react\";\nimport styled from \"styled-components\";\nimport { AppScreen } from \"~/components/AppLayout/AppScreen\";\nimport { ContractForm } from \"~/components/ContractForm\";\n\nexport default function Home() {\n  const { below } = useViewport();\n  const navigate = useNavigate();\n\n  return (\n    <AppScreen>\n      <MainContainer compactMode={below(\"medium\")}>\n        <ContractForm\n          onSubmit={(contractAddress) =>\n            navigate(`/describe?contract=${contractAddress}`)\n          }\n        />\n      </MainContainer>\n    </AppScreen>\n  );\n}\n\nconst MainContainer = styled.div<{ compactMode: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding-top: ${({ compactMode }) => (compactMode ? 5 * GU : 17 * GU)}px;\n  width: 100%;\n  height: 100%;\n`;\n", "export default {'version':'6f73278b','entry':{'module':'/build/entry.client-KXAZZYFT.js','imports':['/build/_shared/chunk-HZUGWBV5.js','/build/_shared/chunk-3OZZSMKW.js','/build/_shared/chunk-HOQS7EGD.js','/build/_shared/chunk-7GBHLDOU.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-LXLZWZT6.js','imports':['/build/_shared/chunk-WM277Z36.js','/build/_shared/chunk-V7JDQZRO.js','/build/_shared/chunk-NSI4AK6N.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/contract-descriptions-search':{'id':'routes/contract-descriptions-search','parentId':'root','path':'contract-descriptions-search','index':undefined,'caseSensitive':undefined,'module':'/build/routes/contract-descriptions-search-PEV4ET7N.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/describe':{'id':'routes/describe','parentId':'root','path':'describe','index':undefined,'caseSensitive':undefined,'module':'/build/routes/describe-TAELDTDN.js','imports':['/build/_shared/chunk-MMKRZLXC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/entries':{'id':'routes/entries','parentId':'root','path':'entries','index':undefined,'caseSensitive':undefined,'module':'/build/routes/entries-AI4QM4WK.js','imports':['/build/_shared/chunk-MMKRZLXC.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/entries/$entryId':{'id':'routes/entries/$entryId','parentId':'routes/entries','path':':entryId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/entries/$entryId-BNHOF4AE.js','imports':['/build/_shared/chunk-UXBPLAWT.js','/build/_shared/chunk-V7JDQZRO.js','/build/_shared/chunk-NSI4AK6N.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/entries/index':{'id':'routes/entries/index','parentId':'routes/entries','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/entries/index-Z3752YRD.js','imports':['/build/_shared/chunk-UXBPLAWT.js','/build/_shared/chunk-V7JDQZRO.js','/build/_shared/chunk-NSI4AK6N.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/fn-descriptions-upload':{'id':'routes/fn-descriptions-upload','parentId':'root','path':'fn-descriptions-upload','index':undefined,'caseSensitive':undefined,'module':'/build/routes/fn-descriptions-upload-T5MYKGOC.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/home':{'id':'routes/home','parentId':'root','path':'home','index':undefined,'caseSensitive':undefined,'module':'/build/routes/home-WJFYTYAI.js','imports':['/build/_shared/chunk-UXBPLAWT.js','/build/_shared/chunk-MMKRZLXC.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-FOBWBYMC.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-6F73278B.js'};"],
  "mappings": "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",
  "names": []
}
